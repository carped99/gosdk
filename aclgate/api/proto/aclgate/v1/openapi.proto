syntax = "proto3";

package aclgate.v1;

option go_package = "aclgate/api/aclgate/v1;aclgatev1";

import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "ACL Gate API";
    version: "0.0.4";
    description: "Access Control Management API\n\nThis API provides features for managing and verifying user permissions for resources.\n\n## Main Features\n- Single/Bulk permission check\n- Grant/Revoke/Update permissions\n- List permissions\n- Audit log query\n\n## Authentication\nAll API calls require a valid JWT token.\n\n## Error Codes\n- 400: Bad Request\n- 401: Unauthorized\n- 403: Forbidden\n- 404: Not Found\n- 500: Internal Server Error";
    contact: {
      name: "ACL Gate API Support";
      url: "https://github.com/carped99/gosdk";
      email: "support@carped99.com";
    };
    license: {
      name: "MIT License";
      url: "https://opensource.org/licenses/MIT";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "Bearer";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
        description: "JWT token (format: Bearer {token})";
      };
    };
  };
  security: {
    security_requirement: {
      key: "Bearer";
      value: {};
    };
  };
  tags: {
    name: "Permission Management";
    description: "APIs for permission verification and management";
  };
  tags: {
    name: "Audit Log";
    description: "APIs for querying permission change history";
  };
  responses: {
    key: "400";
    value: {
      description: "Bad Request";
      schema: {
        json_schema: {ref: ".aclgate.v1.ErrorMessageResponse"}
      };
    };
  };
  responses: {
    key: "401";
    value: {
      description: "Unauthorized";
      schema: {
        json_schema: {ref: ".aclgate.v1.ErrorMessageResponse"}
      };
    };
  };
  responses: {
    key: "403";
    value: {
      description: "Forbidden";
      schema: {
        json_schema: {ref: ".aclgate.v1.ErrorMessageResponse"}
      };
    };
  };
  responses: {
    key: "500";
    value: {
      description: "Internal Server Error";
      schema: {
        json_schema: {ref: ".aclgate.v1.ErrorMessageResponse"}
      };
    };
  };
};
