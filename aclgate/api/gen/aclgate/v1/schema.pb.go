// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aclgate/v1/schema.proto

package aclgatev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Subject (user, group, etc.)
type Subject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subject) Reset() {
	*x = Subject{}
	mi := &file_aclgate_v1_schema_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject) ProtoMessage() {}

func (x *Subject) ProtoReflect() protoreflect.Message {
	mi := &file_aclgate_v1_schema_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject.ProtoReflect.Descriptor instead.
func (*Subject) Descriptor() ([]byte, []int) {
	return file_aclgate_v1_schema_proto_rawDescGZIP(), []int{0}
}

func (x *Subject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Subject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Resource (file, database, API, etc.)
type Resource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_aclgate_v1_schema_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_aclgate_v1_schema_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_aclgate_v1_schema_proto_rawDescGZIP(), []int{1}
}

func (x *Resource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Resource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Relation (type of permission)
type Relation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Relation) Reset() {
	*x = Relation{}
	mi := &file_aclgate_v1_schema_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_aclgate_v1_schema_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_aclgate_v1_schema_proto_rawDescGZIP(), []int{2}
}

func (x *Relation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Permission tuple (combination of subject, resource, and relation)
type Tuple struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subject       *Subject               `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Resource      *Resource              `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Relation      *Relation              `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	mi := &file_aclgate_v1_schema_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_aclgate_v1_schema_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_aclgate_v1_schema_proto_rawDescGZIP(), []int{3}
}

func (x *Tuple) GetSubject() *Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Tuple) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Tuple) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

var File_aclgate_v1_schema_proto protoreflect.FileDescriptor

const file_aclgate_v1_schema_proto_rawDesc = "" +
	"\n" +
	"\x17aclgate/v1/schema.proto\x12\n" +
	"aclgate.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x8d\x02\n" +
	"\aSubject\x12]\n" +
	"\x04type\x18\x01 \x01(\tBI\x92A12/Subject type (e.g., user, group, role, service)\xbaH\x12r\x102\x0e^[^\\s]{1,254}$R\x04type\x12Z\n" +
	"\x02id\x18\x02 \x01(\tBJ\x92A220Subject identifier (UUID, email, username, etc.)\xbaH\x12r\x102\x0e^[^\\s]{1,256}$R\x02id:G\x92AD\n" +
	"B*\aSubject27Entity that holds permissions (user, group, role, etc.)\"\x81\x02\n" +
	"\bResource\x12d\n" +
	"\x04type\x18\x01 \x01(\tBP\x92A523Resource type (e.g., document, database, api, file)\xbaH\x15r\x132\x11^[^:#@\\s]{1,254}$R\x04type\x12R\n" +
	"\x02id\x18\x02 \x01(\tBB\x92A.2,Resource identifier (UUID, path, name, etc.)\xbaH\x0er\f2\n" +
	"^[^#:\\s]+$R\x02id:;\x92A8\n" +
	"6*\bResource2*Target resource for permission enforcement\"\xc6\x01\n" +
	"\bRelation\x12w\n" +
	"\x04name\x18\x01 \x01(\tBc\x92AI2GPermission relation name (e.g., can_read, can_write, can_delete, owner)\xbaH\x14r\x122\x10^[^:#@\\s]{1,50}$R\x04name:A\x92A>\n" +
	"<*\bRelation20Permission relation between subject and resource\"\xa0\x03\n" +
	"\x05Tuple\x12d\n" +
	"\asubject\x18\x01 \x01(\v2\x13.aclgate.v1.SubjectB5\x92A,2\x1eSubject holding the permission\xd2\x01\x04type\xd2\x01\x02id\xbaH\x03\xc8\x01\x01R\asubject\x12q\n" +
	"\bresource\x18\x02 \x01(\v2\x14.aclgate.v1.ResourceB?\x92A62(Resource to which the permission applies\xd2\x01\x04type\xd2\x01\x02id\xbaH\x03\xc8\x01\x01R\bresource\x12W\n" +
	"\brelation\x18\x03 \x01(\v2\x14.aclgate.v1.RelationB%\x92A\x1c2\x13Permission relation\xd2\x01\x04name\xbaH\x03\xc8\x01\x01R\brelation:e\x92Ab\n" +
	"`*\x10Permission Tuple2LDefinition of permission as a combination of subject, resource, and relationB\x88\x01\n" +
	"\x0ecom.aclgate.v1B\vSchemaProtoP\x01Z aclgate/api/aclgate/v1;aclgatev1\xa2\x02\x03AXX\xaa\x02\n" +
	"Aclgate.V1\xca\x02\n" +
	"Aclgate\\V1\xe2\x02\x16Aclgate\\V1\\GPBMetadata\xea\x02\vAclgate::V1b\x06proto3"

var (
	file_aclgate_v1_schema_proto_rawDescOnce sync.Once
	file_aclgate_v1_schema_proto_rawDescData []byte
)

func file_aclgate_v1_schema_proto_rawDescGZIP() []byte {
	file_aclgate_v1_schema_proto_rawDescOnce.Do(func() {
		file_aclgate_v1_schema_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aclgate_v1_schema_proto_rawDesc), len(file_aclgate_v1_schema_proto_rawDesc)))
	})
	return file_aclgate_v1_schema_proto_rawDescData
}

var file_aclgate_v1_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_aclgate_v1_schema_proto_goTypes = []any{
	(*Subject)(nil),  // 0: aclgate.v1.Subject
	(*Resource)(nil), // 1: aclgate.v1.Resource
	(*Relation)(nil), // 2: aclgate.v1.Relation
	(*Tuple)(nil),    // 3: aclgate.v1.Tuple
}
var file_aclgate_v1_schema_proto_depIdxs = []int32{
	0, // 0: aclgate.v1.Tuple.subject:type_name -> aclgate.v1.Subject
	1, // 1: aclgate.v1.Tuple.resource:type_name -> aclgate.v1.Resource
	2, // 2: aclgate.v1.Tuple.relation:type_name -> aclgate.v1.Relation
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_aclgate_v1_schema_proto_init() }
func file_aclgate_v1_schema_proto_init() {
	if File_aclgate_v1_schema_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aclgate_v1_schema_proto_rawDesc), len(file_aclgate_v1_schema_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aclgate_v1_schema_proto_goTypes,
		DependencyIndexes: file_aclgate_v1_schema_proto_depIdxs,
		MessageInfos:      file_aclgate_v1_schema_proto_msgTypes,
	}.Build()
	File_aclgate_v1_schema_proto = out.File
	file_aclgate_v1_schema_proto_goTypes = nil
	file_aclgate_v1_schema_proto_depIdxs = nil
}
