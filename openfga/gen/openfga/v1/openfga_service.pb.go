// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: openfga/v1/openfga_service.proto

package openfgav1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListObjectsRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,2,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	Type                 string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Relation             string                 `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
	User                 string                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	ContextualTuples     *ContextualTupleKeys   `protobuf:"bytes,6,opt,name=contextual_tuples,proto3" json:"contextual_tuples,omitempty"`
	// Additional request context that will be used to evaluate any ABAC conditions encountered
	// in the query evaluation.
	Context *structpb.Struct `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
	// Controls the consistency preference for this request. Default value is UNSPECIFIED, which will have the same behavior as MINIMIZE_LATENCY.
	Consistency   ConsistencyPreference `protobuf:"varint,8,opt,name=consistency,proto3,enum=openfga.v1.ConsistencyPreference" json:"consistency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListObjectsRequest) Reset() {
	*x = ListObjectsRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsRequest) ProtoMessage() {}

func (x *ListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsRequest.ProtoReflect.Descriptor instead.
func (*ListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListObjectsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ListObjectsRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

func (x *ListObjectsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListObjectsRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *ListObjectsRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ListObjectsRequest) GetContextualTuples() *ContextualTupleKeys {
	if x != nil {
		return x.ContextualTuples
	}
	return nil
}

func (x *ListObjectsRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListObjectsRequest) GetConsistency() ConsistencyPreference {
	if x != nil {
		return x.Consistency
	}
	return ConsistencyPreference_UNSPECIFIED
}

type ListObjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Objects       []string               `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListObjectsResponse) Reset() {
	*x = ListObjectsResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectsResponse) ProtoMessage() {}

func (x *ListObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectsResponse.ProtoReflect.Descriptor instead.
func (*ListObjectsResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListObjectsResponse) GetObjects() []string {
	if x != nil {
		return x.Objects
	}
	return nil
}

type ListUsersRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,2,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	Object               *Object                `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Relation             string                 `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
	UserFilters          []*UserTypeFilter      `protobuf:"bytes,5,rep,name=user_filters,proto3" json:"user_filters,omitempty"`
	ContextualTuples     []*TupleKey            `protobuf:"bytes,6,rep,name=contextual_tuples,proto3" json:"contextual_tuples,omitempty"`
	// Additional request context that will be used to evaluate any ABAC conditions encountered
	// in the query evaluation.
	Context *structpb.Struct `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
	// Controls the consistency preference for this request. Default value is UNSPECIFIED, which will have the same behavior as MINIMIZE_LATENCY.
	Consistency   ConsistencyPreference `protobuf:"varint,8,opt,name=consistency,proto3,enum=openfga.v1.ConsistencyPreference" json:"consistency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ListUsersRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

func (x *ListUsersRequest) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *ListUsersRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *ListUsersRequest) GetUserFilters() []*UserTypeFilter {
	if x != nil {
		return x.UserFilters
	}
	return nil
}

func (x *ListUsersRequest) GetContextualTuples() []*TupleKey {
	if x != nil {
		return x.ContextualTuples
	}
	return nil
}

func (x *ListUsersRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListUsersRequest) GetConsistency() ConsistencyPreference {
	if x != nil {
		return x.Consistency
	}
	return ConsistencyPreference_UNSPECIFIED
}

type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type StreamedListObjectsRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,2,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	Type                 string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Relation             string                 `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
	User                 string                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	ContextualTuples     *ContextualTupleKeys   `protobuf:"bytes,6,opt,name=contextual_tuples,proto3" json:"contextual_tuples,omitempty"`
	// Additional request context that will be used to evaluate any ABAC conditions encountered
	// in the query evaluation.
	Context *structpb.Struct `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
	// Controls the consistency preference for this request. Default value is UNSPECIFIED, which will have the same behavior as MINIMIZE_LATENCY.
	Consistency   ConsistencyPreference `protobuf:"varint,8,opt,name=consistency,proto3,enum=openfga.v1.ConsistencyPreference" json:"consistency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamedListObjectsRequest) Reset() {
	*x = StreamedListObjectsRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamedListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamedListObjectsRequest) ProtoMessage() {}

func (x *StreamedListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamedListObjectsRequest.ProtoReflect.Descriptor instead.
func (*StreamedListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{4}
}

func (x *StreamedListObjectsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *StreamedListObjectsRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

func (x *StreamedListObjectsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StreamedListObjectsRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *StreamedListObjectsRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *StreamedListObjectsRequest) GetContextualTuples() *ContextualTupleKeys {
	if x != nil {
		return x.ContextualTuples
	}
	return nil
}

func (x *StreamedListObjectsRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *StreamedListObjectsRequest) GetConsistency() ConsistencyPreference {
	if x != nil {
		return x.Consistency
	}
	return ConsistencyPreference_UNSPECIFIED
}

// The response for a StreamedListObjects RPC.
type StreamedListObjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Object        string                 `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamedListObjectsResponse) Reset() {
	*x = StreamedListObjectsResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamedListObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamedListObjectsResponse) ProtoMessage() {}

func (x *StreamedListObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamedListObjectsResponse.ProtoReflect.Descriptor instead.
func (*StreamedListObjectsResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{5}
}

func (x *StreamedListObjectsResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

type ReadRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StoreId           string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	TupleKey          *ReadRequestTupleKey   `protobuf:"bytes,2,opt,name=tuple_key,proto3" json:"tuple_key,omitempty"`
	PageSize          *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=page_size,proto3" json:"page_size,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,4,opt,name=continuation_token,proto3" json:"continuation_token,omitempty"`
	// Controls the consistency preference for this request. Default value is UNSPECIFIED, which will have the same behavior as MINIMIZE_LATENCY.
	Consistency   ConsistencyPreference `protobuf:"varint,5,opt,name=consistency,proto3,enum=openfga.v1.ConsistencyPreference" json:"consistency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{6}
}

func (x *ReadRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ReadRequest) GetTupleKey() *ReadRequestTupleKey {
	if x != nil {
		return x.TupleKey
	}
	return nil
}

func (x *ReadRequest) GetPageSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *ReadRequest) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

func (x *ReadRequest) GetConsistency() ConsistencyPreference {
	if x != nil {
		return x.Consistency
	}
	return ConsistencyPreference_UNSPECIFIED
}

type ReadRequestTupleKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Relation      string                 `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	Object        string                 `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequestTupleKey) Reset() {
	*x = ReadRequestTupleKey{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequestTupleKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequestTupleKey) ProtoMessage() {}

func (x *ReadRequestTupleKey) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequestTupleKey.ProtoReflect.Descriptor instead.
func (*ReadRequestTupleKey) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{7}
}

func (x *ReadRequestTupleKey) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReadRequestTupleKey) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *ReadRequestTupleKey) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

type ReadResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Tuples            []*Tuple               `protobuf:"bytes,1,rep,name=tuples,proto3" json:"tuples,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,2,opt,name=continuation_token,proto3" json:"continuation_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{8}
}

func (x *ReadResponse) GetTuples() []*Tuple {
	if x != nil {
		return x.Tuples
	}
	return nil
}

func (x *ReadResponse) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type WriteRequestWrites struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TupleKeys     []*TupleKey            `protobuf:"bytes,1,rep,name=tuple_keys,proto3" json:"tuple_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequestWrites) Reset() {
	*x = WriteRequestWrites{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequestWrites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequestWrites) ProtoMessage() {}

func (x *WriteRequestWrites) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequestWrites.ProtoReflect.Descriptor instead.
func (*WriteRequestWrites) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{9}
}

func (x *WriteRequestWrites) GetTupleKeys() []*TupleKey {
	if x != nil {
		return x.TupleKeys
	}
	return nil
}

type WriteRequestDeletes struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	TupleKeys     []*TupleKeyWithoutCondition `protobuf:"bytes,1,rep,name=tuple_keys,proto3" json:"tuple_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequestDeletes) Reset() {
	*x = WriteRequestDeletes{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequestDeletes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequestDeletes) ProtoMessage() {}

func (x *WriteRequestDeletes) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequestDeletes.ProtoReflect.Descriptor instead.
func (*WriteRequestDeletes) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{10}
}

func (x *WriteRequestDeletes) GetTupleKeys() []*TupleKeyWithoutCondition {
	if x != nil {
		return x.TupleKeys
	}
	return nil
}

type WriteRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	Writes               *WriteRequestWrites    `protobuf:"bytes,2,opt,name=writes,proto3" json:"writes,omitempty"`
	Deletes              *WriteRequestDeletes   `protobuf:"bytes,3,opt,name=deletes,proto3" json:"deletes,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,4,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{11}
}

func (x *WriteRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *WriteRequest) GetWrites() *WriteRequestWrites {
	if x != nil {
		return x.Writes
	}
	return nil
}

func (x *WriteRequest) GetDeletes() *WriteRequestDeletes {
	if x != nil {
		return x.Deletes
	}
	return nil
}

func (x *WriteRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

type WriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{12}
}

type CheckRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	TupleKey             *CheckRequestTupleKey  `protobuf:"bytes,2,opt,name=tuple_key,proto3" json:"tuple_key,omitempty"`
	ContextualTuples     *ContextualTupleKeys   `protobuf:"bytes,3,opt,name=contextual_tuples,proto3" json:"contextual_tuples,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,4,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	// Defaults to false. Making it true has performance implications.
	Trace bool `protobuf:"varint,5,opt,name=trace,proto3" json:"trace,omitempty"`
	// Additional request context that will be used to evaluate any ABAC conditions encountered
	// in the query evaluation.
	Context *structpb.Struct `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
	// Controls the consistency preference for this request. Default value is UNSPECIFIED, which will have the same behavior as MINIMIZE_LATENCY.
	Consistency   ConsistencyPreference `protobuf:"varint,7,opt,name=consistency,proto3,enum=openfga.v1.ConsistencyPreference" json:"consistency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{13}
}

func (x *CheckRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *CheckRequest) GetTupleKey() *CheckRequestTupleKey {
	if x != nil {
		return x.TupleKey
	}
	return nil
}

func (x *CheckRequest) GetContextualTuples() *ContextualTupleKeys {
	if x != nil {
		return x.ContextualTuples
	}
	return nil
}

func (x *CheckRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

func (x *CheckRequest) GetTrace() bool {
	if x != nil {
		return x.Trace
	}
	return false
}

func (x *CheckRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CheckRequest) GetConsistency() ConsistencyPreference {
	if x != nil {
		return x.Consistency
	}
	return ConsistencyPreference_UNSPECIFIED
}

type CheckRequestTupleKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Relation      string                 `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	Object        string                 `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckRequestTupleKey) Reset() {
	*x = CheckRequestTupleKey{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRequestTupleKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequestTupleKey) ProtoMessage() {}

func (x *CheckRequestTupleKey) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequestTupleKey.ProtoReflect.Descriptor instead.
func (*CheckRequestTupleKey) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{14}
}

func (x *CheckRequestTupleKey) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CheckRequestTupleKey) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *CheckRequestTupleKey) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

type CheckResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Allowed bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	// For internal use only.
	Resolution    string `protobuf:"bytes,2,opt,name=resolution,proto3" json:"resolution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{15}
}

func (x *CheckResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *CheckResponse) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

type BatchCheckRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	Checks               []*BatchCheckItem      `protobuf:"bytes,2,rep,name=checks,proto3" json:"checks,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,3,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	Consistency          ConsistencyPreference  `protobuf:"varint,4,opt,name=consistency,proto3,enum=openfga.v1.ConsistencyPreference" json:"consistency,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BatchCheckRequest) Reset() {
	*x = BatchCheckRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckRequest) ProtoMessage() {}

func (x *BatchCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckRequest.ProtoReflect.Descriptor instead.
func (*BatchCheckRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{16}
}

func (x *BatchCheckRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *BatchCheckRequest) GetChecks() []*BatchCheckItem {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *BatchCheckRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

func (x *BatchCheckRequest) GetConsistency() ConsistencyPreference {
	if x != nil {
		return x.Consistency
	}
	return ConsistencyPreference_UNSPECIFIED
}

type BatchCheckItem struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TupleKey         *CheckRequestTupleKey  `protobuf:"bytes,1,opt,name=tuple_key,proto3" json:"tuple_key,omitempty"`
	ContextualTuples *ContextualTupleKeys   `protobuf:"bytes,2,opt,name=contextual_tuples,proto3" json:"contextual_tuples,omitempty"`
	Context          *structpb.Struct       `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	CorrelationId    string                 `protobuf:"bytes,4,opt,name=correlation_id,proto3" json:"correlation_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchCheckItem) Reset() {
	*x = BatchCheckItem{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckItem) ProtoMessage() {}

func (x *BatchCheckItem) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckItem.ProtoReflect.Descriptor instead.
func (*BatchCheckItem) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{17}
}

func (x *BatchCheckItem) GetTupleKey() *CheckRequestTupleKey {
	if x != nil {
		return x.TupleKey
	}
	return nil
}

func (x *BatchCheckItem) GetContextualTuples() *ContextualTupleKeys {
	if x != nil {
		return x.ContextualTuples
	}
	return nil
}

func (x *BatchCheckItem) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *BatchCheckItem) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

type BatchCheckResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Result        map[string]*BatchCheckSingleResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckResponse) Reset() {
	*x = BatchCheckResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckResponse) ProtoMessage() {}

func (x *BatchCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckResponse.ProtoReflect.Descriptor instead.
func (*BatchCheckResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{18}
}

func (x *BatchCheckResponse) GetResult() map[string]*BatchCheckSingleResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type BatchCheckSingleResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to CheckResult:
	//
	//	*BatchCheckSingleResult_Allowed
	//	*BatchCheckSingleResult_Error
	CheckResult   isBatchCheckSingleResult_CheckResult `protobuf_oneof:"check_result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckSingleResult) Reset() {
	*x = BatchCheckSingleResult{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckSingleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckSingleResult) ProtoMessage() {}

func (x *BatchCheckSingleResult) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckSingleResult.ProtoReflect.Descriptor instead.
func (*BatchCheckSingleResult) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{19}
}

func (x *BatchCheckSingleResult) GetCheckResult() isBatchCheckSingleResult_CheckResult {
	if x != nil {
		return x.CheckResult
	}
	return nil
}

func (x *BatchCheckSingleResult) GetAllowed() bool {
	if x != nil {
		if x, ok := x.CheckResult.(*BatchCheckSingleResult_Allowed); ok {
			return x.Allowed
		}
	}
	return false
}

func (x *BatchCheckSingleResult) GetError() *CheckError {
	if x != nil {
		if x, ok := x.CheckResult.(*BatchCheckSingleResult_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isBatchCheckSingleResult_CheckResult interface {
	isBatchCheckSingleResult_CheckResult()
}

type BatchCheckSingleResult_Allowed struct {
	Allowed bool `protobuf:"varint,1,opt,name=allowed,proto3,oneof"`
}

type BatchCheckSingleResult_Error struct {
	Error *CheckError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*BatchCheckSingleResult_Allowed) isBatchCheckSingleResult_CheckResult() {}

func (*BatchCheckSingleResult_Error) isBatchCheckSingleResult_CheckResult() {}

type CheckError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Code:
	//
	//	*CheckError_InputError
	//	*CheckError_InternalError
	Code          isCheckError_Code `protobuf_oneof:"code"`
	Message       string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckError) Reset() {
	*x = CheckError{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckError) ProtoMessage() {}

func (x *CheckError) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckError.ProtoReflect.Descriptor instead.
func (*CheckError) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{20}
}

func (x *CheckError) GetCode() isCheckError_Code {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *CheckError) GetInputError() ErrorCode {
	if x != nil {
		if x, ok := x.Code.(*CheckError_InputError); ok {
			return x.InputError
		}
	}
	return ErrorCode_no_error
}

func (x *CheckError) GetInternalError() InternalErrorCode {
	if x != nil {
		if x, ok := x.Code.(*CheckError_InternalError); ok {
			return x.InternalError
		}
	}
	return InternalErrorCode_no_internal_error
}

func (x *CheckError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type isCheckError_Code interface {
	isCheckError_Code()
}

type CheckError_InputError struct {
	InputError ErrorCode `protobuf:"varint,1,opt,name=input_error,proto3,enum=openfga.v1.ErrorCode,oneof"`
}

type CheckError_InternalError struct {
	InternalError InternalErrorCode `protobuf:"varint,2,opt,name=internal_error,proto3,enum=openfga.v1.InternalErrorCode,oneof"`
}

func (*CheckError_InputError) isCheckError_Code() {}

func (*CheckError_InternalError) isCheckError_Code() {}

type ExpandRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	TupleKey             *ExpandRequestTupleKey `protobuf:"bytes,2,opt,name=tuple_key,proto3" json:"tuple_key,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,3,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	// Controls the consistency preference for this request. Default value is UNSPECIFIED, which will have the same behavior as MINIMIZE_LATENCY.
	Consistency      ConsistencyPreference `protobuf:"varint,4,opt,name=consistency,proto3,enum=openfga.v1.ConsistencyPreference" json:"consistency,omitempty"`
	ContextualTuples *ContextualTupleKeys  `protobuf:"bytes,5,opt,name=contextual_tuples,proto3" json:"contextual_tuples,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExpandRequest) Reset() {
	*x = ExpandRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandRequest) ProtoMessage() {}

func (x *ExpandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandRequest.ProtoReflect.Descriptor instead.
func (*ExpandRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{21}
}

func (x *ExpandRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ExpandRequest) GetTupleKey() *ExpandRequestTupleKey {
	if x != nil {
		return x.TupleKey
	}
	return nil
}

func (x *ExpandRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

func (x *ExpandRequest) GetConsistency() ConsistencyPreference {
	if x != nil {
		return x.Consistency
	}
	return ConsistencyPreference_UNSPECIFIED
}

func (x *ExpandRequest) GetContextualTuples() *ContextualTupleKeys {
	if x != nil {
		return x.ContextualTuples
	}
	return nil
}

type ExpandRequestTupleKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Relation      string                 `protobuf:"bytes,1,opt,name=relation,proto3" json:"relation,omitempty"`
	Object        string                 `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpandRequestTupleKey) Reset() {
	*x = ExpandRequestTupleKey{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpandRequestTupleKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandRequestTupleKey) ProtoMessage() {}

func (x *ExpandRequestTupleKey) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandRequestTupleKey.ProtoReflect.Descriptor instead.
func (*ExpandRequestTupleKey) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{22}
}

func (x *ExpandRequestTupleKey) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *ExpandRequestTupleKey) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

type ExpandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tree          *UsersetTree           `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpandResponse) Reset() {
	*x = ExpandResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandResponse) ProtoMessage() {}

func (x *ExpandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandResponse.ProtoReflect.Descriptor instead.
func (*ExpandResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{23}
}

func (x *ExpandResponse) GetTree() *UsersetTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

type ReadAuthorizationModelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadAuthorizationModelRequest) Reset() {
	*x = ReadAuthorizationModelRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAuthorizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAuthorizationModelRequest) ProtoMessage() {}

func (x *ReadAuthorizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAuthorizationModelRequest.ProtoReflect.Descriptor instead.
func (*ReadAuthorizationModelRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{24}
}

func (x *ReadAuthorizationModelRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ReadAuthorizationModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReadAuthorizationModelResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AuthorizationModel *AuthorizationModel    `protobuf:"bytes,1,opt,name=authorization_model,proto3" json:"authorization_model,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ReadAuthorizationModelResponse) Reset() {
	*x = ReadAuthorizationModelResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAuthorizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAuthorizationModelResponse) ProtoMessage() {}

func (x *ReadAuthorizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAuthorizationModelResponse.ProtoReflect.Descriptor instead.
func (*ReadAuthorizationModelResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{25}
}

func (x *ReadAuthorizationModelResponse) GetAuthorizationModel() *AuthorizationModel {
	if x != nil {
		return x.AuthorizationModel
	}
	return nil
}

type WriteAuthorizationModelRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StoreId         string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	TypeDefinitions []*TypeDefinition      `protobuf:"bytes,2,rep,name=type_definitions,proto3" json:"type_definitions,omitempty"`
	SchemaVersion   string                 `protobuf:"bytes,3,opt,name=schema_version,proto3" json:"schema_version,omitempty"`
	Conditions      map[string]*Condition  `protobuf:"bytes,4,rep,name=conditions,proto3" json:"conditions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WriteAuthorizationModelRequest) Reset() {
	*x = WriteAuthorizationModelRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteAuthorizationModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAuthorizationModelRequest) ProtoMessage() {}

func (x *WriteAuthorizationModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAuthorizationModelRequest.ProtoReflect.Descriptor instead.
func (*WriteAuthorizationModelRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{26}
}

func (x *WriteAuthorizationModelRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *WriteAuthorizationModelRequest) GetTypeDefinitions() []*TypeDefinition {
	if x != nil {
		return x.TypeDefinitions
	}
	return nil
}

func (x *WriteAuthorizationModelRequest) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *WriteAuthorizationModelRequest) GetConditions() map[string]*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type WriteAuthorizationModelResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AuthorizationModelId string                 `protobuf:"bytes,1,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *WriteAuthorizationModelResponse) Reset() {
	*x = WriteAuthorizationModelResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteAuthorizationModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAuthorizationModelResponse) ProtoMessage() {}

func (x *WriteAuthorizationModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAuthorizationModelResponse.ProtoReflect.Descriptor instead.
func (*WriteAuthorizationModelResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{27}
}

func (x *WriteAuthorizationModelResponse) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

type ReadAuthorizationModelsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StoreId           string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	PageSize          *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=page_size,proto3" json:"page_size,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,3,opt,name=continuation_token,proto3" json:"continuation_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReadAuthorizationModelsRequest) Reset() {
	*x = ReadAuthorizationModelsRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAuthorizationModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAuthorizationModelsRequest) ProtoMessage() {}

func (x *ReadAuthorizationModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAuthorizationModelsRequest.ProtoReflect.Descriptor instead.
func (*ReadAuthorizationModelsRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{28}
}

func (x *ReadAuthorizationModelsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ReadAuthorizationModelsRequest) GetPageSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *ReadAuthorizationModelsRequest) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type ReadAuthorizationModelsResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AuthorizationModels []*AuthorizationModel  `protobuf:"bytes,1,rep,name=authorization_models,proto3" json:"authorization_models,omitempty"`
	ContinuationToken   string                 `protobuf:"bytes,2,opt,name=continuation_token,proto3" json:"continuation_token,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReadAuthorizationModelsResponse) Reset() {
	*x = ReadAuthorizationModelsResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAuthorizationModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAuthorizationModelsResponse) ProtoMessage() {}

func (x *ReadAuthorizationModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAuthorizationModelsResponse.ProtoReflect.Descriptor instead.
func (*ReadAuthorizationModelsResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{29}
}

func (x *ReadAuthorizationModelsResponse) GetAuthorizationModels() []*AuthorizationModel {
	if x != nil {
		return x.AuthorizationModels
	}
	return nil
}

func (x *ReadAuthorizationModelsResponse) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type WriteAssertionsRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,2,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	Assertions           []*Assertion           `protobuf:"bytes,3,rep,name=assertions,proto3" json:"assertions,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *WriteAssertionsRequest) Reset() {
	*x = WriteAssertionsRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteAssertionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAssertionsRequest) ProtoMessage() {}

func (x *WriteAssertionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAssertionsRequest.ProtoReflect.Descriptor instead.
func (*WriteAssertionsRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{30}
}

func (x *WriteAssertionsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *WriteAssertionsRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

func (x *WriteAssertionsRequest) GetAssertions() []*Assertion {
	if x != nil {
		return x.Assertions
	}
	return nil
}

type WriteAssertionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteAssertionsResponse) Reset() {
	*x = WriteAssertionsResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteAssertionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAssertionsResponse) ProtoMessage() {}

func (x *WriteAssertionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAssertionsResponse.ProtoReflect.Descriptor instead.
func (*WriteAssertionsResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{31}
}

type ReadAssertionsRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StoreId              string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	AuthorizationModelId string                 `protobuf:"bytes,2,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReadAssertionsRequest) Reset() {
	*x = ReadAssertionsRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAssertionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAssertionsRequest) ProtoMessage() {}

func (x *ReadAssertionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAssertionsRequest.ProtoReflect.Descriptor instead.
func (*ReadAssertionsRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{32}
}

func (x *ReadAssertionsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ReadAssertionsRequest) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

type ReadAssertionsResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AuthorizationModelId string                 `protobuf:"bytes,1,opt,name=authorization_model_id,proto3" json:"authorization_model_id,omitempty"`
	Assertions           []*Assertion           `protobuf:"bytes,2,rep,name=assertions,proto3" json:"assertions,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReadAssertionsResponse) Reset() {
	*x = ReadAssertionsResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadAssertionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAssertionsResponse) ProtoMessage() {}

func (x *ReadAssertionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAssertionsResponse.ProtoReflect.Descriptor instead.
func (*ReadAssertionsResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{33}
}

func (x *ReadAssertionsResponse) GetAuthorizationModelId() string {
	if x != nil {
		return x.AuthorizationModelId
	}
	return ""
}

func (x *ReadAssertionsResponse) GetAssertions() []*Assertion {
	if x != nil {
		return x.Assertions
	}
	return nil
}

type ReadChangesRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StoreId           string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	Type              string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	PageSize          *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=page_size,proto3" json:"page_size,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,4,opt,name=continuation_token,proto3" json:"continuation_token,omitempty"`
	StartTime         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,proto3" json:"start_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReadChangesRequest) Reset() {
	*x = ReadChangesRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChangesRequest) ProtoMessage() {}

func (x *ReadChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChangesRequest.ProtoReflect.Descriptor instead.
func (*ReadChangesRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{34}
}

func (x *ReadChangesRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *ReadChangesRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReadChangesRequest) GetPageSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *ReadChangesRequest) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

func (x *ReadChangesRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

type ReadChangesResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Changes           []*TupleChange         `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,2,opt,name=continuation_token,proto3" json:"continuation_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReadChangesResponse) Reset() {
	*x = ReadChangesResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChangesResponse) ProtoMessage() {}

func (x *ReadChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChangesResponse.ProtoReflect.Descriptor instead.
func (*ReadChangesResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{35}
}

func (x *ReadChangesResponse) GetChanges() []*TupleChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *ReadChangesResponse) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type CreateStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStoreRequest) Reset() {
	*x = CreateStoreRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoreRequest) ProtoMessage() {}

func (x *CreateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoreRequest.ProtoReflect.Descriptor instead.
func (*CreateStoreRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{36}
}

func (x *CreateStoreRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateStoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStoreResponse) Reset() {
	*x = CreateStoreResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoreResponse) ProtoMessage() {}

func (x *CreateStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoreResponse.ProtoReflect.Descriptor instead.
func (*CreateStoreResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{37}
}

func (x *CreateStoreResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateStoreResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStoreResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateStoreResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UpdateStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStoreRequest) Reset() {
	*x = UpdateStoreRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreRequest) ProtoMessage() {}

func (x *UpdateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreRequest.ProtoReflect.Descriptor instead.
func (*UpdateStoreRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateStoreRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *UpdateStoreRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateStoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStoreResponse) Reset() {
	*x = UpdateStoreResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreResponse) ProtoMessage() {}

func (x *UpdateStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreResponse.ProtoReflect.Descriptor instead.
func (*UpdateStoreResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateStoreResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateStoreResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateStoreResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UpdateStoreResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DeleteStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStoreRequest) Reset() {
	*x = DeleteStoreRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoreRequest) ProtoMessage() {}

func (x *DeleteStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteStoreRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteStoreRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

type DeleteStoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStoreResponse) Reset() {
	*x = DeleteStoreResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoreResponse) ProtoMessage() {}

func (x *DeleteStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoreResponse.ProtoReflect.Descriptor instead.
func (*DeleteStoreResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{41}
}

type GetStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       string                 `protobuf:"bytes,1,opt,name=store_id,proto3" json:"store_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStoreRequest) Reset() {
	*x = GetStoreRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreRequest) ProtoMessage() {}

func (x *GetStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreRequest.ProtoReflect.Descriptor instead.
func (*GetStoreRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetStoreRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

type GetStoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStoreResponse) Reset() {
	*x = GetStoreResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreResponse) ProtoMessage() {}

func (x *GetStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreResponse.ProtoReflect.Descriptor instead.
func (*GetStoreResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{43}
}

func (x *GetStoreResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetStoreResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetStoreResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetStoreResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetStoreResponse) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type ListStoresRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PageSize          *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=page_size,proto3" json:"page_size,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,2,opt,name=continuation_token,proto3" json:"continuation_token,omitempty"`
	Name              string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListStoresRequest) Reset() {
	*x = ListStoresRequest{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresRequest) ProtoMessage() {}

func (x *ListStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresRequest.ProtoReflect.Descriptor instead.
func (*ListStoresRequest) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{44}
}

func (x *ListStoresRequest) GetPageSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *ListStoresRequest) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

func (x *ListStoresRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListStoresResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Stores            []*Store               `protobuf:"bytes,1,rep,name=stores,proto3" json:"stores,omitempty"`
	ContinuationToken string                 `protobuf:"bytes,2,opt,name=continuation_token,proto3" json:"continuation_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListStoresResponse) Reset() {
	*x = ListStoresResponse{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresResponse) ProtoMessage() {}

func (x *ListStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresResponse.ProtoReflect.Descriptor instead.
func (*ListStoresResponse) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{45}
}

func (x *ListStoresResponse) GetStores() []*Store {
	if x != nil {
		return x.Stores
	}
	return nil
}

func (x *ListStoresResponse) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type AssertionTupleKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Object        string                 `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Relation      string                 `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssertionTupleKey) Reset() {
	*x = AssertionTupleKey{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssertionTupleKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssertionTupleKey) ProtoMessage() {}

func (x *AssertionTupleKey) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssertionTupleKey.ProtoReflect.Descriptor instead.
func (*AssertionTupleKey) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{46}
}

func (x *AssertionTupleKey) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *AssertionTupleKey) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *AssertionTupleKey) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type Assertion struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TupleKey         *AssertionTupleKey     `protobuf:"bytes,1,opt,name=tuple_key,proto3" json:"tuple_key,omitempty"`
	Expectation      bool                   `protobuf:"varint,2,opt,name=expectation,proto3" json:"expectation,omitempty"`
	ContextualTuples []*TupleKey            `protobuf:"bytes,3,rep,name=contextual_tuples,proto3" json:"contextual_tuples,omitempty"`
	// Additional request context that will be used to evaluate any ABAC conditions encountered
	// in the query evaluation.
	Context       *structpb.Struct `protobuf:"bytes,4,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Assertion) Reset() {
	*x = Assertion{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Assertion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assertion) ProtoMessage() {}

func (x *Assertion) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assertion.ProtoReflect.Descriptor instead.
func (*Assertion) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{47}
}

func (x *Assertion) GetTupleKey() *AssertionTupleKey {
	if x != nil {
		return x.TupleKey
	}
	return nil
}

func (x *Assertion) GetExpectation() bool {
	if x != nil {
		return x.Expectation
	}
	return false
}

func (x *Assertion) GetContextualTuples() []*TupleKey {
	if x != nil {
		return x.ContextualTuples
	}
	return nil
}

func (x *Assertion) GetContext() *structpb.Struct {
	if x != nil {
		return x.Context
	}
	return nil
}

type Assertions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assertions    []*Assertion           `protobuf:"bytes,1,rep,name=assertions,proto3" json:"assertions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Assertions) Reset() {
	*x = Assertions{}
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Assertions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assertions) ProtoMessage() {}

func (x *Assertions) ProtoReflect() protoreflect.Message {
	mi := &file_openfga_v1_openfga_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assertions.ProtoReflect.Descriptor instead.
func (*Assertions) Descriptor() ([]byte, []int) {
	return file_openfga_v1_openfga_service_proto_rawDescGZIP(), []int{48}
}

func (x *Assertions) GetAssertions() []*Assertion {
	if x != nil {
		return x.Assertions
	}
	return nil
}

var File_openfga_v1_openfga_service_proto protoreflect.FileDescriptor

const file_openfga_v1_openfga_service_proto_rawDesc = "" +
	"\n" +
	" openfga/v1/openfga_service.proto\x12\n" +
	"openfga.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bopenfga/v1/authzmodel.proto\x1a\x1eopenfga/v1/errors_ignore.proto\x1a\x18openfga/v1/openfga.proto\x1a,openfga/v1/openfga_service_consistency.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x17validate/validate.proto\"\x91\x05\n" +
	"\x12ListObjectsRequest\x12e\n" +
	"\bstore_id\x18\x01 \x01(\tBI\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x02 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xfaB(r&2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$\xd0\x01\x01R\x16authorization_model_id\x12>\n" +
	"\x04type\x18\x03 \x01(\tB*\x92A\fJ\n" +
	"\"document\"\xe0A\x02\xfaB\x15r\x132\x11^[^:#@\\s]{1,254}$R\x04type\x12C\n" +
	"\brelation\x18\x04 \x01(\tB'\x92A\n" +
	"J\b\"reader\"\xe0A\x02\xfaB\x14r\x122\x10^[^:#@\\s]{1,50}$R\brelation\x127\n" +
	"\x04user\x18\x05 \x01(\tB#\x92A\x13J\v\"user:anne\"x\x80\x04\x80\x01\x01\xe0A\x02\xfaB\ar\x05 \x01(\x80\x04R\x04user\x12M\n" +
	"\x11contextual_tuples\x18\x06 \x01(\v2\x1f.openfga.v1.ContextualTupleKeysR\x11contextual_tuples\x121\n" +
	"\acontext\x18\a \x01(\v2\x17.google.protobuf.StructR\acontext\x12M\n" +
	"\vconsistency\x18\b \x01(\x0e2!.openfga.v1.ConsistencyPreferenceB\b\xfaB\x05\x82\x01\x02\x10\x01R\vconsistency\"a\n" +
	"\x13ListObjectsResponse\x12J\n" +
	"\aobjects\x18\x01 \x03(\tB0\x92A*J([\"document:roadmap\",\"document:planning\"]\xe0A\x02R\aobjects\"\xc2\x06\n" +
	"\x10ListUsersRequest\x12e\n" +
	"\bstore_id\x18\x01 \x01(\tBI\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x02 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xfaB(r&2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$\xd0\x01\x01R\x16authorization_model_id\x12N\n" +
	"\x06object\x18\x03 \x01(\v2\x12.openfga.v1.ObjectB\"\x92A\x14J\x12\"document:example\"\xe0A\x02\xfaB\x05\x8a\x01\x02\x10\x01R\x06object\x12C\n" +
	"\brelation\x18\x04 \x01(\tB'\x92A\n" +
	"J\b\"reader\"\xe0A\x02\xfaB\x14r\x122\x10^[^:#@\\s]{1,50}$R\brelation\x12\xd4\x01\n" +
	"\fuser_filters\x18\x05 \x03(\v2\x1a.openfga.v1.UserTypeFilterB\x93\x01\x92A\x82\x012=The type of results returned. Only accepts exactly one value.J;[{\"type\": \"user\"}, {\"type\": \"group\", \"relation\": \"member\"}]\xa0\x01\x01\xa8\x01\x01\xe0A\x02\xfaB\a\x92\x01\x04\b\x01\x10\x01R\fuser_filters\x12R\n" +
	"\x11contextual_tuples\x18\x06 \x03(\v2\x14.openfga.v1.TupleKeyB\x0e\x92A\x03\xa0\x01d\xfaB\x05\x92\x01\x02\x10dR\x11contextual_tuples\x121\n" +
	"\acontext\x18\a \x01(\v2\x17.google.protobuf.StructR\acontext\x12M\n" +
	"\vconsistency\x18\b \x01(\x0e2!.openfga.v1.ConsistencyPreferenceB\b\xfaB\x05\x82\x01\x02\x10\x01R\vconsistency\"C\n" +
	"\x11ListUsersResponse\x12.\n" +
	"\x05users\x18\x01 \x03(\v2\x10.openfga.v1.UserB\x06\x92A\x00\xe0A\x02R\x05users\"\x99\x05\n" +
	"\x1aStreamedListObjectsRequest\x12e\n" +
	"\bstore_id\x18\x01 \x01(\tBI\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x02 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xfaB(r&2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$\xd0\x01\x01R\x16authorization_model_id\x12>\n" +
	"\x04type\x18\x03 \x01(\tB*\x92A\fJ\n" +
	"\"document\"\xe0A\x02\xfaB\x15r\x132\x11^[^:#@\\s]{1,254}$R\x04type\x12C\n" +
	"\brelation\x18\x04 \x01(\tB'\x92A\n" +
	"J\b\"reader\"\xe0A\x02\xfaB\x14r\x122\x10^[^:#@\\s]{1,50}$R\brelation\x127\n" +
	"\x04user\x18\x05 \x01(\tB#\x92A\x13J\v\"user:anne\"x\x80\x04\x80\x01\x01\xe0A\x02\xfaB\ar\x05 \x01(\x80\x04R\x04user\x12M\n" +
	"\x11contextual_tuples\x18\x06 \x01(\v2\x1f.openfga.v1.ContextualTupleKeysR\x11contextual_tuples\x121\n" +
	"\acontext\x18\a \x01(\v2\x17.google.protobuf.StructR\acontext\x12M\n" +
	"\vconsistency\x18\b \x01(\x0e2!.openfga.v1.ConsistencyPreferenceB\b\xfaB\x05\x82\x01\x02\x10\x01R\vconsistency\"Q\n" +
	"\x1bStreamedListObjectsResponse\x122\n" +
	"\x06object\x18\x01 \x01(\tB\x1a\x92A\x14J\x12\"document:roadmap\"\xe0A\x02R\x06object\"\xa2\x04\n" +
	"\vReadRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12=\n" +
	"\ttuple_key\x18\x02 \x01(\v2\x1f.openfga.v1.ReadRequestTupleKeyR\ttuple_key\x12]\n" +
	"\tpage_size\x18\x03 \x01(\v2\x1b.google.protobuf.Int32ValueB\"\x92A\x16J\x0250Y\x00\x00\x00\x00\x00\x00Y@i\x00\x00\x00\x00\x00\x00\xf0?\xfaB\x06\x1a\x04\x18d(\x01R\tpage_size\x12\xbb\x01\n" +
	"\x12continuation_token\x18\x04 \x01(\tB\x8a\x01\x92AdJb\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\xfaB r\x1e(\x80(2\x19^$|^[A-Za-z0-9-_]+={0,2}$R\x12continuation_token\x12M\n" +
	"\vconsistency\x18\x05 \x01(\x0e2!.openfga.v1.ConsistencyPreferenceB\b\xfaB\x05\x82\x01\x02\x10\x01R\vconsistency\"\xfd\x01\n" +
	"\x13ReadRequestTupleKey\x12O\n" +
	"\x04user\x18\x01 \x01(\tB;\x92A\x10J\v\"user:anne\"x\x80\x04\xfaB%r#(\x80\x042\x1b^[^\\s]{1,511}:[^\\s]{1,511}$\xd0\x01\x01R\x04user\x12E\n" +
	"\brelation\x18\x02 \x01(\tB)\x92A\fJ\b\"reader\"x2\xfaB\x17r\x152\x10^[^:#@\\s]{1,50}$\xd0\x01\x01R\brelation\x12N\n" +
	"\x06object\x18\x03 \x01(\tB6\x92A\x1bJ\x16\"document:2021-budget\"x\x80\x02\xfaB\x15r\x132\x0e^[^\\s]{2,256}$\xd0\x01\x01R\x06object\"\xc3\x02\n" +
	"\fReadResponse\x12.\n" +
	"\x06tuples\x18\x01 \x03(\v2\x11.openfga.v1.TupleB\x03\xe0A\x02R\x06tuples\x12\x82\x02\n" +
	"\x12continuation_token\x18\x02 \x01(\tB\xd1\x01\x92A\xa7\x012AThe continuation token will be empty if there are no more tuples.Jb\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\xe0A\x02\xfaB r\x1e(\x80(2\x19^$|^[A-Za-z0-9-_]+={0,2}$R\x12continuation_token\"]\n" +
	"\x12WriteRequestWrites\x12G\n" +
	"\n" +
	"tuple_keys\x18\x01 \x03(\v2\x14.openfga.v1.TupleKeyB\x11\x92A\x03\xa8\x01\x01\xe0A\x02\xfaB\x05\x92\x01\x02\b\x01R\n" +
	"tuple_keys\"n\n" +
	"\x13WriteRequestDeletes\x12W\n" +
	"\n" +
	"tuple_keys\x18\x01 \x03(\v2$.openfga.v1.TupleKeyWithoutConditionB\x11\x92A\x03\xa8\x01\x01\xe0A\x02\xfaB\x05\x92\x01\x02\b\x01R\n" +
	"tuple_keys\"\xf2\x02\n" +
	"\fWriteRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x126\n" +
	"\x06writes\x18\x02 \x01(\v2\x1e.openfga.v1.WriteRequestWritesR\x06writes\x129\n" +
	"\adeletes\x18\x03 \x01(\v2\x1f.openfga.v1.WriteRequestDeletesR\adeletes\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x04 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xfaB(r&2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$\xd0\x01\x01R\x16authorization_model_id\"\x0f\n" +
	"\rWriteResponse\"\xc1\x04\n" +
	"\fCheckRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12K\n" +
	"\ttuple_key\x18\x02 \x01(\v2 .openfga.v1.CheckRequestTupleKeyB\v\xe0A\x02\xfaB\x05\x8a\x01\x02\x10\x01R\ttuple_key\x12M\n" +
	"\x11contextual_tuples\x18\x03 \x01(\v2\x1f.openfga.v1.ContextualTupleKeysR\x11contextual_tuples\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x04 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xfaB(r&2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$\xd0\x01\x01R\x16authorization_model_id\x12\"\n" +
	"\x05trace\x18\x05 \x01(\bB\f\x92A\t@\x01J\x05falseR\x05trace\x121\n" +
	"\acontext\x18\x06 \x01(\v2\x17.google.protobuf.StructR\acontext\x12M\n" +
	"\vconsistency\x18\a \x01(\x0e2!.openfga.v1.ConsistencyPreferenceB\b\xfaB\x05\x82\x01\x02\x10\x01R\vconsistency\"\xee\x01\n" +
	"\x14CheckRequestTupleKey\x12?\n" +
	"\x04user\x18\x01 \x01(\tB+\x92A\x10J\v\"user:anne\"x\x80\x04\xe0A\x02\xfaB\x12r\x102\x0e^[^\\s]{2,512}$R\x04user\x12E\n" +
	"\brelation\x18\x02 \x01(\tB)\x92A\fJ\b\"reader\"x2\xe0A\x02\xfaB\x14r\x122\x10^[^:#@\\s]{1,50}$R\brelation\x12N\n" +
	"\x06object\x18\x03 \x01(\tB6\x92A\x1bJ\x16\"document:2021-budget\"x\x80\x02\xe0A\x02\xfaB\x12r\x102\x0e^[^\\s]{2,256}$R\x06object\"T\n" +
	"\rCheckResponse\x12#\n" +
	"\aallowed\x18\x01 \x01(\bB\t\x92A\x06J\x04trueR\aallowed\x12\x1e\n" +
	"\n" +
	"resolution\x18\x02 \x01(\tR\n" +
	"resolution\"\x9a\x03\n" +
	"\x11BatchCheckRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12E\n" +
	"\x06checks\x18\x02 \x03(\v2\x1a.openfga.v1.BatchCheckItemB\x11\x92A\x03\xa8\x01\x01\xe0A\x02\xfaB\x05\x92\x01\x02\b\x01R\x06checks\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x03 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xfaB(r&2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$\xd0\x01\x01R\x16authorization_model_id\x12M\n" +
	"\vconsistency\x18\x04 \x01(\x0e2!.openfga.v1.ConsistencyPreferenceB\b\xfaB\x05\x82\x01\x02\x10\x01R\vconsistency\"\xbe\x03\n" +
	"\x0eBatchCheckItem\x12K\n" +
	"\ttuple_key\x18\x01 \x01(\v2 .openfga.v1.CheckRequestTupleKeyB\v\xe0A\x02\xfaB\x05\x8a\x01\x02\x10\x01R\ttuple_key\x12M\n" +
	"\x11contextual_tuples\x18\x02 \x01(\v2\x1f.openfga.v1.ContextualTupleKeysR\x11contextual_tuples\x121\n" +
	"\acontext\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontext\x12\xdc\x01\n" +
	"\x0ecorrelation_id\x18\x04 \x01(\tB\xb3\x01\x92A\x96\x012lcorrelation_id must be a string containing only letters, numbers, or hyphens, with length ≤ 36 characters.J&\"1cd93d8c-8e45-43c6-9a15-cbb3c7f394bc\"\xe0A\x02\xfaB\x13r\x112\x0f^[\\w\\d-]{1,36}$R\x0ecorrelation_id\"\xe6\x02\n" +
	"\x12BatchCheckResponse\x12\xf0\x01\n" +
	"\x06result\x18\x01 \x03(\v2*.openfga.v1.BatchCheckResponse.ResultEntryB\xab\x01\x92A\xa7\x012Nmap keys are the correlation_id values from the BatchCheckItems in the requestJU{\"1cd93d8c-8e45-43c6-9a15-cbb3c7f394bc\": {\"allowed\": true, \"error\": {\"message\": \"\"}}}R\x06result\x1a]\n" +
	"\vResultEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".openfga.v1.BatchCheckSingleResultR\x05value:\x028\x01\"t\n" +
	"\x16BatchCheckSingleResult\x12\x1a\n" +
	"\aallowed\x18\x01 \x01(\bH\x00R\aallowed\x12.\n" +
	"\x05error\x18\x02 \x01(\v2\x16.openfga.v1.CheckErrorH\x00R\x05errorB\x0e\n" +
	"\fcheck_result\"\xb2\x01\n" +
	"\n" +
	"CheckError\x129\n" +
	"\vinput_error\x18\x01 \x01(\x0e2\x15.openfga.v1.ErrorCodeH\x00R\vinput_error\x12G\n" +
	"\x0einternal_error\x18\x02 \x01(\x0e2\x1d.openfga.v1.InternalErrorCodeH\x00R\x0einternal_error\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessageB\x06\n" +
	"\x04code\"\xec\x03\n" +
	"\rExpandRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12L\n" +
	"\ttuple_key\x18\x02 \x01(\v2!.openfga.v1.ExpandRequestTupleKeyB\v\xe0A\x02\xfaB\x05\x8a\x01\x02\x10\x01R\ttuple_key\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x03 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xfaB(r&2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$\xd0\x01\x01R\x16authorization_model_id\x12M\n" +
	"\vconsistency\x18\x04 \x01(\x0e2!.openfga.v1.ConsistencyPreferenceB\b\xfaB\x05\x82\x01\x02\x10\x01R\vconsistency\x12M\n" +
	"\x11contextual_tuples\x18\x05 \x01(\v2\x1f.openfga.v1.ContextualTupleKeysR\x11contextual_tuples\"\xb4\x01\n" +
	"\x15ExpandRequestTupleKey\x12H\n" +
	"\brelation\x18\x01 \x01(\tB,\x92A\fJ\b\"reader\"x2\xe0A\x02\xfaB\x17r\x152\x10^[^:#@\\s]{1,50}$\xd0\x01\x01R\brelation\x12Q\n" +
	"\x06object\x18\x02 \x01(\tB9\x92A\x1bJ\x16\"document:2021-budget\"x\x80\x02\xe0A\x02\xfaB\x15r\x132\x0e^[^\\s]{2,256}$\xd0\x01\x01R\x06object\"=\n" +
	"\x0eExpandResponse\x12+\n" +
	"\x04tree\x18\x01 \x01(\v2\x17.openfga.v1.UsersetTreeR\x04tree\"\xe7\x01\n" +
	"\x1dReadAuthorizationModelRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12\\\n" +
	"\x02id\x18\x02 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\x02id\"r\n" +
	"\x1eReadAuthorizationModelResponse\x12P\n" +
	"\x13authorization_model\x18\x01 \x01(\v2\x1e.openfga.v1.AuthorizationModelR\x13authorization_model\"\xfb\x03\n" +
	"\x1eWriteAuthorizationModelRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12Y\n" +
	"\x10type_definitions\x18\x02 \x03(\v2\x1a.openfga.v1.TypeDefinitionB\x11\x92A\x03\xa8\x01\x01\xe0A\x02\xfaB\x05\x92\x01\x02\b\x01R\x10type_definitions\x12B\n" +
	"\x0eschema_version\x18\x03 \x01(\tB\x1a\xe0A\x02\xfaB\x14r\x12R\x031.0R\x031.1R\x031.2\xd0\x01\x00R\x0eschema_version\x12z\n" +
	"\n" +
	"conditions\x18\x04 \x03(\v2:.openfga.v1.WriteAuthorizationModelRequest.ConditionsEntryB\x1e\xfaB\x1b\x9a\x01\x18\x10\x19\"\x14r\x122\x10^[^:#@\\s]{1,50}$R\n" +
	"conditions\x1aT\n" +
	"\x0fConditionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.openfga.v1.ConditionR\x05value:\x028\x01\"\xa8\x01\n" +
	"\x1fWriteAuthorizationModelResponse\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\x16authorization_model_id\"\x95\x03\n" +
	"\x1eReadAuthorizationModelsRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12K\n" +
	"\tpage_size\x18\x02 \x01(\v2\x1b.google.protobuf.Int32ValueB\x10\x92A\x04J\x0250\xfaB\x06\x1a\x04\x18d(\x01R\tpage_size\x12\xbb\x01\n" +
	"\x12continuation_token\x18\x03 \x01(\tB\x8a\x01\x92AdJb\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\xfaB r\x1e(\x80(2\x19^$|^[A-Za-z0-9-_]+={0,2}$R\x12continuation_token\"\xfc\x02\n" +
	"\x1fReadAuthorizationModelsResponse\x12W\n" +
	"\x14authorization_models\x18\x01 \x03(\v2\x1e.openfga.v1.AuthorizationModelB\x03\xe0A\x02R\x14authorization_models\x12\xff\x01\n" +
	"\x12continuation_token\x18\x02 \x01(\tB\xce\x01\x92A\xa7\x012AThe continuation token will be empty if there are no more models.Jb\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\xfaB r\x1e(\x80(2\x19^$|^[A-Za-z0-9-_]+={0,2}$R\x12continuation_token\"\xd5\x02\n" +
	"\x16WriteAssertionsRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x02 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\x16authorization_model_id\x12J\n" +
	"\n" +
	"assertions\x18\x03 \x03(\v2\x15.openfga.v1.AssertionB\x13\x92A\x03\xa0\x01d\xe0A\x02\xfaB\a\x92\x01\x04\b\x00\x10dR\n" +
	"assertions\"\x19\n" +
	"\x17WriteAssertionsResponse\"\x88\x02\n" +
	"\x15ReadAssertionsRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x02 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\x16authorization_model_id\"\xd6\x01\n" +
	"\x16ReadAssertionsResponse\x12\x84\x01\n" +
	"\x16authorization_model_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01G5JAVJ41T49E9TT3SKVS7X1J\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\x16authorization_model_id\x125\n" +
	"\n" +
	"assertions\x18\x02 \x03(\v2\x15.openfga.v1.AssertionR\n" +
	"assertions\"\xf9\x05\n" +
	"\x12ReadChangesRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12.\n" +
	"\x04type\x18\x02 \x01(\tB\x1a\xfaB\x17r\x152\x10^[^:#\\s]{1,254}$\xd0\x01\x01R\x04type\x12K\n" +
	"\tpage_size\x18\x03 \x01(\v2\x1b.google.protobuf.Int32ValueB\x10\x92A\x04J\x0250\xfaB\x06\x1a\x04\x18d(\x01R\tpage_size\x12\xbb\x01\n" +
	"\x12continuation_token\x18\x04 \x01(\tB\x8a\x01\x92AdJb\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\xfaB r\x1e(\x80(2\x19^$|^[A-Za-z0-9-_]+={0,2}$R\x12continuation_token\x12\xbd\x02\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x80\x02\x92A\xf4\x012\xd7\x01Start date and time of changes to read.\n" +
	"Format: ISO 8601 timestamp (e.g., 2022-01-01T00:00:00Z)\n" +
	"If a continuation_token is provided along side start_time, the continuation_token will take precedence over start_time.J\x182021-01-01T00:00:00.000Z\xfaB\x05\xb2\x01\x028\x01R\n" +
	"start_time\"\xd3\x02\n" +
	"\x13ReadChangesResponse\x126\n" +
	"\achanges\x18\x01 \x03(\v2\x17.openfga.v1.TupleChangeB\x03\xe0A\x02R\achanges\x12\x83\x02\n" +
	"\x12continuation_token\x18\x02 \x01(\tB\xd2\x01\x92A\xab\x012EThe continuation token will be identical if there are no new changes.Jb\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\xfaB r\x1e(\x80(2\x19^$|^[A-Za-z0-9-_]+={0,2}$R\x12continuation_token\"g\n" +
	"\x12CreateStoreRequest\x12Q\n" +
	"\x04name\x18\x01 \x01(\tB=\x92A\x11J\x0f\"my-store-name\"\xe0A\x02\xfaB#r!2\x1f^[a-zA-Z0-9\\s\\.\\-\\/^_&@]{3,64}$R\x04name\"\xe6\x01\n" +
	"\x13CreateStoreResponse\x124\n" +
	"\x02id\x18\x01 \x01(\tB$\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02R\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12?\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x02R\n" +
	"created_at\x12?\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x02R\n" +
	"updated_at\"\xd5\x01\n" +
	"\x12UpdateStoreRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\x12U\n" +
	"\x04name\x18\x02 \x01(\tBA\x92A\x15J\x13\"my-new-store-name\"\xe0A\x02\xfaB#r!2\x1f^[a-zA-Z0-9\\s\\.\\-\\/^_&@]{3,64}$R\x04name\"\xe6\x01\n" +
	"\x13UpdateStoreResponse\x124\n" +
	"\x02id\x18\x01 \x01(\tB$\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02R\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12?\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x02R\n" +
	"created_at\x12?\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x02R\n" +
	"updated_at\"~\n" +
	"\x12DeleteStoreRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\"\x15\n" +
	"\x13DeleteStoreResponse\"{\n" +
	"\x0fGetStoreRequest\x12h\n" +
	"\bstore_id\x18\x01 \x01(\tBL\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02\xfaB%r#2!^[ABCDEFGHJKMNPQRSTVWXYZ0-9]{26}$R\bstore_id\"\x9f\x02\n" +
	"\x10GetStoreResponse\x124\n" +
	"\x02id\x18\x01 \x01(\tB$\x92A\x1eJ\x1c\"01YCP46JKYM8FJCQ37NMBYHE5X\"\xe0A\x02R\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12?\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x02R\n" +
	"created_at\x12?\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x02R\n" +
	"updated_at\x12:\n" +
	"\n" +
	"deleted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"deleted_at\"\xc2\x04\n" +
	"\x11ListStoresRequest\x12D\n" +
	"\tpage_size\x18\x01 \x01(\v2\x1b.google.protobuf.Int32ValueB\t\xfaB\x06\x1a\x04\x18d(\x01R\tpage_size\x12\xbe\x01\n" +
	"\x12continuation_token\x18\x02 \x01(\tB\x8d\x01\x92AdJb\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\xfaB#r!(\x80(2\x1c^$|^$|^[A-Za-z0-9-_]+={0,2}$R\x12continuation_token\x12\xa5\x02\n" +
	"\x04name\x18\x03 \x01(\tB\x90\x02\x92A\xe0\x012\xcc\x01The name parameter instructs the API to only include results that match that name.Multiple results may be returned. Only exact matches will be returned; substring matches and regexes will not be evaluatedJ\x0f\"my-store-name\"\xe0A\x01\xfaB&r$2\x1f^[a-zA-Z0-9\\s\\.\\-\\/^_&@]{3,64}$\xd0\x01\x01R\x04name\"\xc9\x02\n" +
	"\x12ListStoresResponse\x12.\n" +
	"\x06stores\x18\x01 \x03(\v2\x11.openfga.v1.StoreB\x03\xe0A\x02R\x06stores\x12\x82\x02\n" +
	"\x12continuation_token\x18\x02 \x01(\tB\xd1\x01\x92A\xa7\x012AThe continuation token will be empty if there are no more stores.Jb\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\xe0A\x02\xfaB r\x1e(\x80(2\x19^$|^[A-Za-z0-9-_]+={0,2}$R\x12continuation_token\"\xeb\x01\n" +
	"\x11AssertionTupleKey\x12N\n" +
	"\x06object\x18\x01 \x01(\tB6\x92A\x1bJ\x16\"document:2021-budget\"x\x80\x02\xe0A\x02\xfaB\x12r\x102\x0e^[^\\s]{2,256}$R\x06object\x12E\n" +
	"\brelation\x18\x02 \x01(\tB)\x92A\fJ\b\"reader\"x2\xe0A\x02\xfaB\x14r\x122\x10^[^:#@\\s]{1,50}$R\brelation\x12?\n" +
	"\x04user\x18\x03 \x01(\tB+\x92A\x10J\v\"user:anne\"x\x80\x04\xe0A\x02\xfaB\x12r\x102\x0e^[^\\s]{2,512}$R\x04user\"\x9d\x02\n" +
	"\tAssertion\x12H\n" +
	"\ttuple_key\x18\x01 \x01(\v2\x1d.openfga.v1.AssertionTupleKeyB\v\xe0A\x02\xfaB\x05\x8a\x01\x02\x10\x01R\ttuple_key\x12%\n" +
	"\vexpectation\x18\x02 \x01(\bB\x03\xe0A\x02R\vexpectation\x12R\n" +
	"\x11contextual_tuples\x18\x03 \x03(\v2\x14.openfga.v1.TupleKeyB\x0e\x92A\x03\xa0\x01\x14\xfaB\x05\x92\x01\x02\x10\x14R\x11contextual_tuples\x12K\n" +
	"\acontext\x18\x04 \x01(\v2\x17.google.protobuf.StructB\x18\x92A\x15J\x13{\"view_count\": 100}R\acontext\"H\n" +
	"\n" +
	"Assertions\x12:\n" +
	"\n" +
	"assertions\x18\x01 \x03(\v2\x15.openfga.v1.AssertionB\x03\xe0A\x02R\n" +
	"assertions2\xe7\xeb\x01\n" +
	"\x0eOpenFGAService\x12\xd0\x1d\n" +
	"\x04Read\x12\x17.openfga.v1.ReadRequest\x1a\x18.openfga.v1.ReadResponse\"\x94\x1d\x92A\xee\x1c\n" +
	"\x13Relationship Tuples\x12WGet tuples from the store that matches a query, without following userset rewrite rules\x1a\xf7\x1bThe Read API will return the tuples for a certain store that match a query filter specified in the body of the request. \n" +
	"The API doesn't guarantee order by any field. \n" +
	"It is different from the `/stores/{store_id}/expand` API in that it only returns relationship tuples that are stored in the system and satisfy the query. \n" +
	"In the body:\n" +
	"1. `tuple_key` is optional. If not specified, it will return all tuples in the store.\n" +
	"2. `tuple_key.object` is mandatory if `tuple_key` is specified. It can be a full object (e.g., `type:object_id`) or type only (e.g., `type:`).\n" +
	"3. `tuple_key.user` is mandatory if tuple_key is specified in the case the `tuple_key.object` is a type only. If tuple_key.user is specified, it needs to be a full object (e.g., `type:user_id`).\n" +
	"## Examples\n" +
	"### Query for all objects in a type definition\n" +
	"To query for all objects that `user:bob` has `reader` relationship in the `document` type definition, call read API with body of\n" +
	"```json\n" +
	"{\n" +
	" \"tuple_key\": {\n" +
	"     \"user\": \"user:bob\",\n" +
	"     \"relation\": \"reader\",\n" +
	"     \"object\": \"document:\"\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"The API will return tuples and a continuation token, something like\n" +
	"```json\n" +
	"{\n" +
	"  \"tuples\": [\n" +
	"    {\n" +
	"      \"key\": {\n" +
	"        \"user\": \"user:bob\",\n" +
	"        \"relation\": \"reader\",\n" +
	"        \"object\": \"document:2021-budget\"\n" +
	"      },\n" +
	"      \"timestamp\": \"2021-10-06T15:32:11.128Z\"\n" +
	"    }\n" +
	"  ],\n" +
	"  \"continuation_token\": \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\n" +
	"}\n" +
	"```\n" +
	"This means that `user:bob` has a `reader` relationship with 1 document `document:2021-budget`. Note that this API, unlike the List Objects API, does not evaluate the tuples in the store.\n" +
	"The continuation token will be empty if there are no more tuples to query.\n" +
	"### Query for all stored relationship tuples that have a particular relation and object\n" +
	"To query for all users that have `reader` relationship with `document:2021-budget`, call read API with body of \n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"     \"object\": \"document:2021-budget\",\n" +
	"     \"relation\": \"reader\"\n" +
	"   }\n" +
	"}\n" +
	"```\n" +
	"The API will return something like \n" +
	"```json\n" +
	"{\n" +
	"  \"tuples\": [\n" +
	"    {\n" +
	"      \"key\": {\n" +
	"        \"user\": \"user:bob\",\n" +
	"        \"relation\": \"reader\",\n" +
	"        \"object\": \"document:2021-budget\"\n" +
	"      },\n" +
	"      \"timestamp\": \"2021-10-06T15:32:11.128Z\"\n" +
	"    }\n" +
	"  ],\n" +
	"  \"continuation_token\": \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\n" +
	"}\n" +
	"```\n" +
	"This means that `document:2021-budget` has 1 `reader` (`user:bob`).  Note that, even if the model said that all `writers` are also `readers`, the API will not return writers such as `user:anne` because it only returns tuples and does not evaluate them.\n" +
	"### Query for all users with all relationships for a particular document\n" +
	"To query for all users that have any relationship with `document:2021-budget`, call read API with body of \n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"      \"object\": \"document:2021-budget\"\n" +
	"   }\n" +
	"}\n" +
	"```\n" +
	"The API will return something like \n" +
	"```json\n" +
	"{\n" +
	"  \"tuples\": [\n" +
	"    {\n" +
	"      \"key\": {\n" +
	"        \"user\": \"user:anne\",\n" +
	"        \"relation\": \"writer\",\n" +
	"        \"object\": \"document:2021-budget\"\n" +
	"      },\n" +
	"      \"timestamp\": \"2021-10-05T13:42:12.356Z\"\n" +
	"    },\n" +
	"    {\n" +
	"      \"key\": {\n" +
	"        \"user\": \"user:bob\",\n" +
	"        \"relation\": \"reader\",\n" +
	"        \"object\": \"document:2021-budget\"\n" +
	"      },\n" +
	"      \"timestamp\": \"2021-10-06T15:32:11.128Z\"\n" +
	"    }\n" +
	"  ],\n" +
	"  \"continuation_token\": \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\n" +
	"}\n" +
	"```\n" +
	"This means that `document:2021-budget` has 1 `reader` (`user:bob`) and 1 `writer` (`user:anne`).\n" +
	"*\x04Read\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/stores/{store_id}/read\x12\xc5\r\n" +
	"\x05Write\x12\x18.openfga.v1.WriteRequest\x1a\x19.openfga.v1.WriteResponse\"\x86\r\x92A\xdf\f\n" +
	"\x13Relationship Tuples\x12#Add or delete tuples from the store\x1a\x9b\fThe Write API will transactionally update the tuples for a certain store. Tuples and type definitions allow OpenFGA to determine whether a relationship exists between an object and an user.\n" +
	"In the body, `writes` adds new tuples and `deletes` removes existing tuples. When deleting a tuple, any `condition` specified with it is ignored.\n" +
	"The API is not idempotent: if, later on, you try to add the same tuple key (even if the `condition` is different), or if you try to delete a non-existing tuple, it will throw an error.\n" +
	"The API will not allow you to write tuples such as `document:2021-budget#viewer@document:2021-budget#viewer`, because they are implicit.\n" +
	"An `authorization_model_id` may be specified in the body. If it is, it will be used to assert that each written tuple (not deleted) is valid for the model specified. If it is not specified, the latest authorization model ID will be used.\n" +
	"## Example\n" +
	"### Adding relationships\n" +
	"To add `user:anne` as a `writer` for `document:2021-budget`, call write API with the following \n" +
	"```json\n" +
	"{\n" +
	"  \"writes\": {\n" +
	"    \"tuple_keys\": [\n" +
	"      {\n" +
	"        \"user\": \"user:anne\",\n" +
	"        \"relation\": \"writer\",\n" +
	"        \"object\": \"document:2021-budget\"\n" +
	"      }\n" +
	"    ]\n" +
	"  },\n" +
	"  \"authorization_model_id\": \"01G50QVV17PECNVAHX1GG4Y5NC\"\n" +
	"}\n" +
	"```\n" +
	"### Removing relationships\n" +
	"To remove `user:bob` as a `reader` for `document:2021-budget`, call write API with the following \n" +
	"```json\n" +
	"{\n" +
	"  \"deletes\": {\n" +
	"    \"tuple_keys\": [\n" +
	"      {\n" +
	"        \"user\": \"user:bob\",\n" +
	"        \"relation\": \"reader\",\n" +
	"        \"object\": \"document:2021-budget\"\n" +
	"      }\n" +
	"    ]\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"*\x05Write\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/stores/{store_id}/write\x12\xda*\n" +
	"\x05Check\x12\x18.openfga.v1.CheckRequest\x1a\x19.openfga.v1.CheckResponse\"\x9b*\x92A\xf4)\n" +
	"\x14Relationship Queries\x126Check whether a user is authorized to access an object\x1a\x9c)The Check API returns whether a given user has a relationship with a given object in a given store.\n" +
	"The `user` field of the request can be a specific target, such as `user:anne`, or a userset (set of users) such as `group:marketing#member` or a type-bound public access `user:*`.\n" +
	"To arrive at a result, the API uses: an authorization model, explicit tuples written through the Write API, contextual tuples present in the request, and implicit tuples that exist by virtue of applying set theory (such as `document:2021-budget#viewer@document:2021-budget#viewer`; the set of users who are viewers of `document:2021-budget` are the set of users who are the viewers of `document:2021-budget`).\n" +
	"A `contextual_tuples` object may also be included in the body of the request. This object contains one field `tuple_keys`, which is an array of tuple keys. Each of these tuples may have an associated `condition`.\n" +
	"You may also provide an `authorization_model_id` in the body. This will be used to assert that the input `tuple_key` is valid for the model specified. If not specified, the assertion will be made against the latest authorization model ID. It is strongly recommended to specify authorization model id for better performance.\n" +
	"You may also provide a `context` object that will be used to evaluate the conditioned tuples in the system. It is strongly recommended to provide a value for all the input parameters of all the conditions, to ensure that all tuples be evaluated correctly.\n" +
	"By default, the Check API caches results for a short time to optimize performance. You may specify a value of `HIGHER_CONSISTENCY` for the optional `consistency` parameter in the body to inform the server that higher conisistency is preferred at the expense of increased latency. Consideration should be given to the increased latency if requesting higher consistency.\n" +
	"The response will return whether the relationship exists in the field `allowed`.\n" +
	"\n" +
	"Some exceptions apply, but in general, if a Check API responds with `{allowed: true}`, then you can expect the equivalent ListObjects query to return the object, and viceversa. \n" +
	"For example, if `Check(user:anne, reader, document:2021-budget)` responds with `{allowed: true}`, then `ListObjects(user:anne, reader, document)` may include `document:2021-budget` in the response.\n" +
	"## Examples\n" +
	"### Querying with contextual tuples\n" +
	"In order to check if user `user:anne` of type `user` has a `reader` relationship with object `document:2021-budget` given the following contextual tuple\n" +
	"```json\n" +
	"{\n" +
	"  \"user\": \"user:anne\",\n" +
	"  \"relation\": \"member\",\n" +
	"  \"object\": \"time_slot:office_hours\"\n" +
	"}\n" +
	"```\n" +
	"the Check API can be used with the following request body:\n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"    \"user\": \"user:anne\",\n" +
	"    \"relation\": \"reader\",\n" +
	"    \"object\": \"document:2021-budget\"\n" +
	"  },\n" +
	"  \"contextual_tuples\": {\n" +
	"    \"tuple_keys\": [\n" +
	"      {\n" +
	"        \"user\": \"user:anne\",\n" +
	"        \"relation\": \"member\",\n" +
	"        \"object\": \"time_slot:office_hours\"\n" +
	"      }\n" +
	"    ]\n" +
	"  },\n" +
	"  \"authorization_model_id\": \"01G50QVV17PECNVAHX1GG4Y5NC\"\n" +
	"}\n" +
	"```\n" +
	"### Querying usersets\n" +
	"Some Checks will always return `true`, even without any tuples. For example, for the following authorization model\n" +
	"```python\n" +
	"model\n" +
	"  schema 1.1\n" +
	"type user\n" +
	"type document\n" +
	"  relations\n" +
	"    define reader: [user]\n" +
	"```\n" +
	"the following query\n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"     \"user\": \"document:2021-budget#reader\",\n" +
	"     \"relation\": \"reader\",\n" +
	"     \"object\": \"document:2021-budget\"\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"will always return `{ \"allowed\": true }`. This is because usersets are self-defining: the userset `document:2021-budget#reader` will always have the `reader` relation with `document:2021-budget`.\n" +
	"### Querying usersets with difference in the model\n" +
	"A Check for a userset can yield results that must be treated carefully if the model involves difference. For example, for the following authorization model\n" +
	"```python\n" +
	"model\n" +
	"  schema 1.1\n" +
	"type user\n" +
	"type group\n" +
	"  relations\n" +
	"    define member: [user]\n" +
	"type document\n" +
	"  relations\n" +
	"    define blocked: [user]\n" +
	"    define reader: [group#member] but not blocked\n" +
	"```\n" +
	"the following query\n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"     \"user\": \"group:finance#member\",\n" +
	"     \"relation\": \"reader\",\n" +
	"     \"object\": \"document:2021-budget\"\n" +
	"  },\n" +
	"  \"contextual_tuples\": {\n" +
	"    \"tuple_keys\": [\n" +
	"      {\n" +
	"        \"user\": \"user:anne\",\n" +
	"        \"relation\": \"member\",\n" +
	"        \"object\": \"group:finance\"\n" +
	"      },\n" +
	"      {\n" +
	"        \"user\": \"group:finance#member\",\n" +
	"        \"relation\": \"reader\",\n" +
	"        \"object\": \"document:2021-budget\"\n" +
	"      },\n" +
	"      {\n" +
	"        \"user\": \"user:anne\",\n" +
	"        \"relation\": \"blocked\",\n" +
	"        \"object\": \"document:2021-budget\"\n" +
	"      }\n" +
	"    ]\n" +
	"  },\n" +
	"}\n" +
	"```\n" +
	"will return `{ \"allowed\": true }`, even though a specific user of the userset `group:finance#member` does not have the `reader` relationship with the given object.\n" +
	"### Requesting higher consistency\n" +
	"By default, the Check API caches results for a short time to optimize performance. You may request higher consistency to inform the server that higher consistency should be preferred at the expense of increased latency. Care should be taken when requesting higher consistency due to the increased latency.\n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"     \"user\": \"group:finance#member\",\n" +
	"     \"relation\": \"reader\",\n" +
	"     \"object\": \"document:2021-budget\"\n" +
	"  },\n" +
	"  \"consistency\": \"HIGHER_CONSISTENCY\"\n" +
	"}\n" +
	"```\n" +
	"*\x05Check\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/stores/{store_id}/check\x12\x8b\x13\n" +
	"\n" +
	"BatchCheck\x12\x1d.openfga.v1.BatchCheckRequest\x1a\x1e.openfga.v1.BatchCheckResponse\"\xbd\x12\x92A\x90\x12\n" +
	"\x14Relationship Queries\x125Send a list of `check` operations in a single request\x1a\xb4\x11The `BatchCheck` API functions nearly identically to `Check`, but instead of checking a single user-object relationship BatchCheck accepts a list of relationships to check and returns a map containing `BatchCheckItem` response for each check it received.\n" +
	"\n" +
	"An associated `correlation_id` is required for each check in the batch. This ID is used to correlate a check to the appropriate response. It is a string consisting of only alphanumeric characters or hyphens with a maximum length of 36 characters. This `correlation_id` is used to map the result of each check to the item which was checked, so it must be unique for each item in the batch. We recommend using a UUID or ULID as the `correlation_id`, but you can use whatever unique identifier you need as long  as it matches this regex pattern: `^[\\w\\d-]{1,36}$`\n" +
	"\n" +
	"NOTE: The maximum number of checks that can be passed in the `BatchCheck` API is configurable via the [OPENFGA_MAX_CHECKS_PER_BATCH_CHECK](https://openfga.dev/docs/getting-started/setup-openfga/configuration#OPENFGA_MAX_CHECKS_PER_BATCH_CHECK) environment variable. If `BatchCheck` is called using the SDK, the SDK can split the batch check requests for you.\n" +
	"\n" +
	"For more details on how `Check` functions, see the docs for `/check`.\n" +
	"\n" +
	"### Examples\n" +
	"#### A BatchCheckRequest\n" +
	"```json\n" +
	"{\n" +
	"  \"checks\": [\n" +
	"     {\n" +
	"       \"tuple_key\": {\n" +
	"         \"object\": \"document:2021-budget\"\n" +
	"         \"relation\": \"reader\",\n" +
	"         \"user\": \"user:anne\",\n" +
	"       },\n" +
	"       \"contextual_tuples\": {...}\n" +
	"       \"context\": {}\n" +
	"       \"correlation_id\": \"01JA8PM3QM7VBPGB8KMPK8SBD5\"\n" +
	"     },\n" +
	"     {\n" +
	"       \"tuple_key\": {\n" +
	"         \"object\": \"document:2021-budget\"\n" +
	"         \"relation\": \"reader\",\n" +
	"         \"user\": \"user:bob\",\n" +
	"       },\n" +
	"       \"contextual_tuples\": {...}\n" +
	"       \"context\": {}\n" +
	"       \"correlation_id\": \"01JA8PMM6A90NV5ET0F28CYSZQ\"\n" +
	"     }\n" +
	"   ]\n" +
	"}\n" +
	"```\n" +
	"\n" +
	"Below is a possible response to the above request. Note that the result map's keys are the `correlation_id` values from the checked items in the request:\n" +
	"```json\n" +
	"{\n" +
	"   \"result\": {\n" +
	"     \"01JA8PMM6A90NV5ET0F28CYSZQ\": {\n" +
	"       \"allowed\": false, \n" +
	"       \"error\": {\"message\": \"\"} \n" +
	"    },\n" +
	"     \"01JA8PM3QM7VBPGB8KMPK8SBD5\": {\n" +
	"       \"allowed\": true, \n" +
	"       \"error\": {\"message\": \"\"} \n" +
	"    }\n" +
	"}\n" +
	"```\n" +
	"*\n" +
	"BatchCheck\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/stores/{store_id}/batch-check\x12\xda\x1e\n" +
	"\x06Expand\x12\x19.openfga.v1.ExpandRequest\x1a\x1a.openfga.v1.ExpandResponse\"\x98\x1e\x92A\xf0\x1d\n" +
	"\x14Relationship Queries\x12\x8e\x01Expand all relationships in userset tree format, and following userset rewrite rules.  Useful to reason about and debug a certain relationship\x1a\xbe\x1cThe Expand API will return all users and usersets that have certain relationship with an object in a certain store.\n" +
	"This is different from the `/stores/{store_id}/read` API in that both users and computed usersets are returned.\n" +
	"Body parameters `tuple_key.object` and `tuple_key.relation` are all required.\n" +
	"A `contextual_tuples` object may also be included in the body of the request. This object contains one field `tuple_keys`, which is an array of tuple keys. Each of these tuples may have an associated `condition`.\n" +
	"The response will return a tree whose leaves are the specific users and usersets. Union, intersection and difference operator are located in the intermediate nodes.\n" +
	"\n" +
	"## Example\n" +
	"To expand all users that have the `reader` relationship with object `document:2021-budget`, use the Expand API with the following request body\n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"    \"object\": \"document:2021-budget\",\n" +
	"    \"relation\": \"reader\"\n" +
	"  },\n" +
	"  \"authorization_model_id\": \"01G50QVV17PECNVAHX1GG4Y5NC\"\n" +
	"}\n" +
	"```\n" +
	"OpenFGA's response will be a userset tree of the users and usersets that have read access to the document.\n" +
	"```json\n" +
	"{\n" +
	"  \"tree\":{\n" +
	"    \"root\":{\n" +
	"      \"type\":\"document:2021-budget#reader\",\n" +
	"      \"union\":{\n" +
	"        \"nodes\":[\n" +
	"          {\n" +
	"            \"type\":\"document:2021-budget#reader\",\n" +
	"            \"leaf\":{\n" +
	"              \"users\":{\n" +
	"                \"users\":[\n" +
	"                  \"user:bob\"\n" +
	"                ]\n" +
	"              }\n" +
	"            }\n" +
	"          },\n" +
	"          {\n" +
	"            \"type\":\"document:2021-budget#reader\",\n" +
	"            \"leaf\":{\n" +
	"              \"computed\":{\n" +
	"                \"userset\":\"document:2021-budget#writer\"\n" +
	"              }\n" +
	"            }\n" +
	"          }\n" +
	"        ]\n" +
	"      }\n" +
	"    }\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"The caller can then call expand API for the `writer` relationship for the `document:2021-budget`.\n" +
	"### Expand Request with Contextual Tuples\n" +
	"\n" +
	"Given the model\n" +
	"```python\n" +
	"model\n" +
	"    schema 1.1\n" +
	"\n" +
	"type user\n" +
	"\n" +
	"type folder\n" +
	"    relations\n" +
	"        define owner: [user]\n" +
	"\n" +
	"type document\n" +
	"    relations\n" +
	"        define parent: [folder]\n" +
	"        define viewer: [user] or writer\n" +
	"        define writer: [user] or owner from parent\n" +
	"```\n" +
	"and the initial tuples\n" +
	"```json\n" +
	"[{\n" +
	"    \"user\": \"user:bob\",\n" +
	"    \"relation\": \"owner\",\n" +
	"    \"object\": \"folder:1\"\n" +
	"}]\n" +
	"```\n" +
	"\n" +
	"To expand all `writers` of `document:1` when `document:1` is put in `folder:1`, the first call could be\n" +
	"\n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"    \"object\": \"document:1\",\n" +
	"    \"relation\": \"writer\"\n" +
	"  },\n" +
	"  \"contextual_tuples\": {\n" +
	"    \"tuple_keys\": [\n" +
	"      {\n" +
	"        \"user\": \"folder:1\",\n" +
	"        \"relation\": \"parent\",\n" +
	"        \"object\": \"document:1\"\n" +
	"      }\n" +
	"    ]\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"this returns:\n" +
	"```json\n" +
	"{\n" +
	"  \"tree\": {\n" +
	"    \"root\": {\n" +
	"      \"name\": \"document:1#writer\",\n" +
	"      \"union\": {\n" +
	"        \"nodes\": [\n" +
	"          {\n" +
	"            \"name\": \"document:1#writer\",\n" +
	"            \"leaf\": {\n" +
	"              \"users\": {\n" +
	"                \"users\": []\n" +
	"              }\n" +
	"            }\n" +
	"          },\n" +
	"          {\n" +
	"            \"name\": \"document:1#writer\",\n" +
	"            \"leaf\": {\n" +
	"              \"tupleToUserset\": {\n" +
	"                \"tupleset\": \"document:1#parent\",\n" +
	"                \"computed\": [\n" +
	"                  {\n" +
	"                    \"userset\": \"folder:1#owner\"\n" +
	"                  }\n" +
	"                ]\n" +
	"              }\n" +
	"            }\n" +
	"          }\n" +
	"        ]\n" +
	"      }\n" +
	"    }\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"This tells us that the `owner` of `folder:1` may also be a writer. So our next call could be to find the `owners` of `folder:1`\n" +
	"```json\n" +
	"{\n" +
	"  \"tuple_key\": {\n" +
	"    \"object\": \"folder:1\",\n" +
	"    \"relation\": \"owner\"\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"which gives\n" +
	"```json\n" +
	"{\n" +
	"  \"tree\": {\n" +
	"    \"root\": {\n" +
	"      \"name\": \"folder:1#owner\",\n" +
	"      \"leaf\": {\n" +
	"        \"users\": {\n" +
	"          \"users\": [\n" +
	"            \"user:bob\"\n" +
	"          ]\n" +
	"        }\n" +
	"      }\n" +
	"    }\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"*\x06Expand\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/stores/{store_id}/expand\x12\x82\v\n" +
	"\x17ReadAuthorizationModels\x12*.openfga.v1.ReadAuthorizationModelsRequest\x1a+.openfga.v1.ReadAuthorizationModelsResponse\"\x8d\n" +
	"\x92A\xda\t\n" +
	"\x14Authorization Models\x12:Return all the authorization models for a particular store\x1a\xec\bThe ReadAuthorizationModels API will return all the authorization models for a certain store.\n" +
	"OpenFGA's response will contain an array of all authorization models, sorted in descending order of creation.\n" +
	"\n" +
	"## Example\n" +
	"Assume that a store's authorization model has been configured twice. To get all the authorization models that have been created in this store, call GET authorization-models. The API will return a response that looks like:\n" +
	"```json\n" +
	"{\n" +
	"  \"authorization_models\": [\n" +
	"    {\n" +
	"      \"id\": \"01G50QVV17PECNVAHX1GG4Y5NC\",\n" +
	"      \"type_definitions\": [...]\n" +
	"    },\n" +
	"    {\n" +
	"      \"id\": \"01G4ZW8F4A07AKQ8RHSVG9RW04\",\n" +
	"      \"type_definitions\": [...]\n" +
	"    },\n" +
	"  ],\n" +
	"  \"continuation_token\": \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"\n" +
	"}\n" +
	"```\n" +
	"If there are no more authorization models available, the `continuation_token` field will be empty\n" +
	"```json\n" +
	"{\n" +
	"  \"authorization_models\": [\n" +
	"    {\n" +
	"      \"id\": \"01G50QVV17PECNVAHX1GG4Y5NC\",\n" +
	"      \"type_definitions\": [...]\n" +
	"    },\n" +
	"    {\n" +
	"      \"id\": \"01G4ZW8F4A07AKQ8RHSVG9RW04\",\n" +
	"      \"type_definitions\": [...]\n" +
	"    },\n" +
	"  ],\n" +
	"  \"continuation_token\": \"\"\n" +
	"}\n" +
	"```\n" +
	"*\x17ReadAuthorizationModels\x82\xd3\xe4\x93\x02)\x12'/stores/{store_id}/authorization-models\x12\x84\v\n" +
	"\x16ReadAuthorizationModel\x12).openfga.v1.ReadAuthorizationModelRequest\x1a*.openfga.v1.ReadAuthorizationModelResponse\"\x92\n" +
	"\x92A\xda\t\n" +
	"\x14Authorization Models\x125Return a particular version of an authorization model\x1a\xf2\bThe ReadAuthorizationModel API returns an authorization model by its identifier.\n" +
	"The response will return the authorization model for the particular version.\n" +
	"\n" +
	"## Example\n" +
	"To retrieve the authorization model with ID `01G5JAVJ41T49E9TT3SKVS7X1J` for the store, call the GET authorization-models by ID API with `01G5JAVJ41T49E9TT3SKVS7X1J` as the `id` path parameter.  The API will return:\n" +
	"```json\n" +
	"{\n" +
	"  \"authorization_model\":{\n" +
	"    \"id\":\"01G5JAVJ41T49E9TT3SKVS7X1J\",\n" +
	"    \"type_definitions\":[\n" +
	"      {\n" +
	"        \"type\":\"user\"\n" +
	"      },\n" +
	"      {\n" +
	"        \"type\":\"document\",\n" +
	"        \"relations\":{\n" +
	"          \"reader\":{\n" +
	"            \"union\":{\n" +
	"              \"child\":[\n" +
	"                {\n" +
	"                  \"this\":{}\n" +
	"                },\n" +
	"                {\n" +
	"                  \"computedUserset\":{\n" +
	"                    \"object\":\"\",\n" +
	"                    \"relation\":\"writer\"\n" +
	"                  }\n" +
	"                }\n" +
	"              ]\n" +
	"            }\n" +
	"          },\n" +
	"          \"writer\":{\n" +
	"            \"this\":{}\n" +
	"          }\n" +
	"        }\n" +
	"      }\n" +
	"    ]\n" +
	"  }\n" +
	"}\n" +
	"```\n" +
	"In the above example, there are 2 types (`user` and `document`). The `document` type has 2 relations (`writer` and `reader`).*\x16ReadAuthorizationModel\x82\xd3\xe4\x93\x02.\x12,/stores/{store_id}/authorization-models/{id}\x12\xf9\n" +
	"\n" +
	"\x17WriteAuthorizationModel\x12*.openfga.v1.WriteAuthorizationModelRequest\x1a+.openfga.v1.WriteAuthorizationModelResponse\"\x84\n" +
	"\x92A\xce\t\n" +
	"\x14Authorization Models\x12 Create a new authorization model\x1a\xa8\bThe WriteAuthorizationModel API will add a new authorization model to a store.\n" +
	"Each item in the `type_definitions` array is a type definition as specified in the field `type_definition`.\n" +
	"The response will return the authorization model's ID in the `id` field.\n" +
	"\n" +
	"## Example\n" +
	"To add an authorization model with `user` and `document` type definitions, call POST authorization-models API with the body: \n" +
	"```json\n" +
	"{\n" +
	"  \"type_definitions\":[\n" +
	"    {\n" +
	"      \"type\":\"user\"\n" +
	"    },\n" +
	"    {\n" +
	"      \"type\":\"document\",\n" +
	"      \"relations\":{\n" +
	"        \"reader\":{\n" +
	"          \"union\":{\n" +
	"            \"child\":[\n" +
	"              {\n" +
	"                \"this\":{}\n" +
	"              },\n" +
	"              {\n" +
	"                \"computedUserset\":{\n" +
	"                  \"object\":\"\",\n" +
	"                  \"relation\":\"writer\"\n" +
	"                }\n" +
	"              }\n" +
	"            ]\n" +
	"          }\n" +
	"        },\n" +
	"        \"writer\":{\n" +
	"          \"this\":{}\n" +
	"        }\n" +
	"      }\n" +
	"    }\n" +
	"  ]\n" +
	"}\n" +
	"```\n" +
	"OpenFGA's response will include the version id for this authorization model, which will look like \n" +
	"```\n" +
	"{\"authorization_model_id\": \"01G50QVV17PECNVAHX1GG4Y5NC\"}\n" +
	"```\n" +
	"*\x17WriteAuthorizationModelJP\n" +
	"\x03201\x12I\n" +
	"\x16A successful response.\x12/\n" +
	"-\x1a+.openfga.v1.WriteAuthorizationModelResponse\x82\xd3\xe4\x93\x02,:\x01*\"'/stores/{store_id}/authorization-models\x12\xef\x04\n" +
	"\x0fWriteAssertions\x12\".openfga.v1.WriteAssertionsRequest\x1a#.openfga.v1.WriteAssertionsResponse\"\x92\x04\x92A\xcd\x03\n" +
	"\n" +
	"Assertions\x12/Upsert assertions for an authorization model ID\x1a\xb2\x02The WriteAssertions API will upsert new assertions for an authorization model id, or overwrite the existing ones. An assertion is an object that contains a tuple key, the expectation of whether a call to the Check API of that tuple key will return true or false, and optionally a list of contextual tuples.*\x0fWriteAssertionsJH\n" +
	"\x03204\x12A\n" +
	"\x16A successful response.\x12'\n" +
	"%\x1a#.openfga.v1.WriteAssertionsResponse\x82\xd3\xe4\x93\x02;:\x01*\x1a6/stores/{store_id}/assertions/{authorization_model_id}\x12\xd3\x02\n" +
	"\x0eReadAssertions\x12!.openfga.v1.ReadAssertionsRequest\x1a\".openfga.v1.ReadAssertionsResponse\"\xf9\x01\x92A\xb7\x01\n" +
	"\n" +
	"Assertions\x12-Read assertions for an authorization model ID\x1ajThe ReadAssertions API will return, for a given authorization model id, all the assertions stored for it. *\x0eReadAssertions\x82\xd3\xe4\x93\x028\x126/stores/{store_id}/assertions/{authorization_model_id}\x12\xe3\a\n" +
	"\vReadChanges\x12\x1e.openfga.v1.ReadChangesRequest\x1a\x1f.openfga.v1.ReadChangesResponse\"\x92\a\x92A\xec\x06\n" +
	"\x13Relationship Tuples\x12&Return a list of all the tuple changes\x1a\x9f\x06The ReadChanges API will return a paginated list of tuple changes (additions and deletions) that occurred in a given store, sorted by ascending time. The response will include a continuation token that is used to get the next set of changes. If there are no changes after the provided continuation token, the same token will be returned in order for it to be used when new changes are recorded. If the store never had any tuples added or removed, this token will be empty.\n" +
	"You can use the `type` parameter to only get the list of tuple changes that affect objects of that type.\n" +
	"When reading a write tuple change, if it was conditioned, the condition will be returned.\n" +
	"When reading a delete tuple change, the condition will NOT be returned regardless of whether it was originally conditioned or not.\n" +
	"*\vReadChanges\x82\xd3\xe4\x93\x02\x1c\x12\x1a/stores/{store_id}/changes\x12\xbb\x02\n" +
	"\vCreateStore\x12\x1e.openfga.v1.CreateStoreRequest\x1a\x1f.openfga.v1.CreateStoreResponse\"\xea\x01\x92A\xd4\x01\n" +
	"\x06Stores\x12\x0eCreate a store\x1agCreate a unique OpenFGA store which will be used to store authorization models and relationship tuples.*\vCreateStoreJD\n" +
	"\x03201\x12=\n" +
	"\x16A successful response.\x12#\n" +
	"!\x1a\x1f.openfga.v1.CreateStoreResponse\x82\xd3\xe4\x93\x02\f:\x01*\"\a/stores\x12\x8e\x02\n" +
	"\vUpdateStore\x12\x1e.openfga.v1.UpdateStoreRequest\x1a\x1f.openfga.v1.UpdateStoreResponse\"\xbd\x01\x92A\x87\x01\n" +
	"\x06Stores\x12\x0eUpdate a store\x1a\x1aUpdates an existing store.*\vUpdateStoreJD\n" +
	"\x03200\x12=\n" +
	"\x16A successful response.\x12#\n" +
	"!\x1a\x1f.openfga.v1.UpdateStoreResponse\xfa\xd2\xe4\x93\x02\x0f\x12\rUNIMPLEMENTED\x82\xd3\xe4\x93\x02\x17:\x01*2\x12/stores/{store_id}\x12\xd2\x02\n" +
	"\vDeleteStore\x12\x1e.openfga.v1.DeleteStoreRequest\x1a\x1f.openfga.v1.DeleteStoreResponse\"\x81\x02\x92A\xe3\x01\n" +
	"\x06Stores\x12\x0eDelete a store\x1avDelete an OpenFGA store. This does not delete the data associated with the store, like tuples or authorization models.*\vDeleteStoreJD\n" +
	"\x03204\x12=\n" +
	"\x16A successful response.\x12#\n" +
	"!\x1a\x1f.openfga.v1.DeleteStoreResponse\x82\xd3\xe4\x93\x02\x14*\x12/stores/{store_id}\x12\xaf\x01\n" +
	"\bGetStore\x12\x1b.openfga.v1.GetStoreRequest\x1a\x1c.openfga.v1.GetStoreResponse\"h\x92AK\n" +
	"\x06Stores\x12\vGet a store\x1a*Returns an OpenFGA store by its identifier*\bGetStore\x82\xd3\xe4\x93\x02\x14\x12\x12/stores/{store_id}\x12\xa9\x02\n" +
	"\n" +
	"ListStores\x12\x1d.openfga.v1.ListStoresRequest\x1a\x1e.openfga.v1.ListStoresResponse\"\xdb\x01\x92A\xc8\x01\n" +
	"\x06Stores\x12\x0fList all stores\x1a\xa0\x01Returns a paginated list of OpenFGA stores and a continuation token to get additional stores.\n" +
	"The continuation token will be empty if there are no more stores.\n" +
	"*\n" +
	"ListStores\x82\xd3\xe4\x93\x02\t\x12\a/stores\x12\xf1\x04\n" +
	"\x13StreamedListObjects\x12&.openfga.v1.StreamedListObjectsRequest\x1a'.openfga.v1.StreamedListObjectsResponse\"\x86\x04\x92A\xcf\x03\n" +
	"\x14Relationship Queries\x12FStream all objects of the given type that the user has a relation with\x1a\xd9\x02The Streamed ListObjects API is very similar to the the ListObjects API, with two differences: \n" +
	"1. Instead of collecting all objects before returning a response, it streams them to the client as they are collected. \n" +
	"2. The number of results returned is only limited by the execution timeout specified in the flag OPENFGA_LIST_OBJECTS_DEADLINE. \n" +
	"*\x13StreamedListObjects\x82\xd3\xe4\x93\x02-:\x01*\"(/stores/{store_id}/streamed-list-objects0\x01\x12\xdd\x11\n" +
	"\vListObjects\x12\x1e.openfga.v1.ListObjectsRequest\x1a\x1f.openfga.v1.ListObjectsResponse\"\x8c\x11\x92A\xde\x10\n" +
	"\x14Relationship Queries\x12DList all objects of the given type that the user has a relation with\x1a\xf2\x0fThe ListObjects API returns a list of all the objects of the given type that the user has a relation with.\n" +
	" To arrive at a result, the API uses: an authorization model, explicit tuples written through the Write API, contextual tuples present in the request, and implicit tuples that exist by virtue of applying set theory (such as `document:2021-budget#viewer@document:2021-budget#viewer`; the set of users who are viewers of `document:2021-budget` are the set of users who are the viewers of `document:2021-budget`).\n" +
	"An `authorization_model_id` may be specified in the body. If it is not specified, the latest authorization model ID will be used. It is strongly recommended to specify authorization model id for better performance.\n" +
	"You may also specify `contextual_tuples` that will be treated as regular tuples. Each of these tuples may have an associated `condition`.\n" +
	"You may also provide a `context` object that will be used to evaluate the conditioned tuples in the system. It is strongly recommended to provide a value for all the input parameters of all the conditions, to ensure that all tuples be evaluated correctly.\n" +
	"By default, the Check API caches results for a short time to optimize performance. You may specify a value of `HIGHER_CONSISTENCY` for the optional `consistency` parameter in the body to inform the server that higher conisistency is preferred at the expense of increased latency. Consideration should be given to the increased latency if requesting higher consistency.\n" +
	"The response will contain the related objects in an array in the \"objects\" field of the response and they will be strings in the object format `<type>:<id>` (e.g. \"document:roadmap\").\n" +
	"The number of objects in the response array will be limited by the execution timeout specified in the flag OPENFGA_LIST_OBJECTS_DEADLINE and by the upper bound specified in the flag OPENFGA_LIST_OBJECTS_MAX_RESULTS, whichever is hit first.\n" +
	"The objects given will not be sorted, and therefore two identical calls can give a given different set of objects.*\vListObjects\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/stores/{store_id}/list-objects\x12\xe5\x11\n" +
	"\tListUsers\x12\x1c.openfga.v1.ListUsersRequest\x1a\x1d.openfga.v1.ListUsersResponse\"\x9a\x11\x92A\xee\x10\n" +
	"\x14Relationship Queries\x12]List the users matching the provided filter who have a certain relation to a particular type.\x1a\xeb\x0fThe ListUsers API returns a list of all the users of a specific type that have a relation to a given object.\n" +
	" To arrive at a result, the API uses: an authorization model, explicit tuples written through the Write API, contextual tuples present in the request, and implicit tuples that exist by virtue of applying set theory (such as `document:2021-budget#viewer@document:2021-budget#viewer`; the set of users who are viewers of `document:2021-budget` are the set of users who are the viewers of `document:2021-budget`).\n" +
	"An `authorization_model_id` may be specified in the body. If it is not specified, the latest authorization model ID will be used. It is strongly recommended to specify authorization model id for better performance.\n" +
	"You may also specify `contextual_tuples` that will be treated as regular tuples. Each of these tuples may have an associated `condition`.\n" +
	"You may also provide a `context` object that will be used to evaluate the conditioned tuples in the system. It is strongly recommended to provide a value for all the input parameters of all the conditions, to ensure that all tuples be evaluated correctly.\n" +
	"The response will contain the related users in an array in the \"users\" field of the response. These results may include specific objects, usersets \n" +
	"or type-bound public access. Each of these types of results is encoded in its own type and not represented as a string.In cases where a type-bound public access result is returned (e.g. `user:*`), it cannot be inferred that all subjects\n" +
	"of that type have a relation to the object; it is possible that negations exist and checks should still be queried\n" +
	"on individual subjects to ensure access to that document.The number of users in the response array will be limited by the execution timeout specified in the flag OPENFGA_LIST_USERS_DEADLINE and by the upper bound specified in the flag OPENFGA_LIST_USERS_MAX_RESULTS, whichever is hit first.\n" +
	"The returned users will not be sorted, and therefore two identical calls may yield different sets of users.*\tListUsers\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/stores/{store_id}/list-usersB\x8c\x01\n" +
	"\x0ecom.openfga.v1B\x13OpenfgaServiceProtoP\x01Z\x1copenfga/openfga/v1;openfgav1\xa2\x02\x03OXX\xaa\x02\n" +
	"Openfga.V1\xca\x02\n" +
	"Openfga\\V1\xe2\x02\x16Openfga\\V1\\GPBMetadata\xea\x02\vOpenfga::V1b\x06proto3"

var (
	file_openfga_v1_openfga_service_proto_rawDescOnce sync.Once
	file_openfga_v1_openfga_service_proto_rawDescData []byte
)

func file_openfga_v1_openfga_service_proto_rawDescGZIP() []byte {
	file_openfga_v1_openfga_service_proto_rawDescOnce.Do(func() {
		file_openfga_v1_openfga_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_openfga_v1_openfga_service_proto_rawDesc), len(file_openfga_v1_openfga_service_proto_rawDesc)))
	})
	return file_openfga_v1_openfga_service_proto_rawDescData
}

var file_openfga_v1_openfga_service_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_openfga_v1_openfga_service_proto_goTypes = []any{
	(*ListObjectsRequest)(nil),              // 0: openfga.v1.ListObjectsRequest
	(*ListObjectsResponse)(nil),             // 1: openfga.v1.ListObjectsResponse
	(*ListUsersRequest)(nil),                // 2: openfga.v1.ListUsersRequest
	(*ListUsersResponse)(nil),               // 3: openfga.v1.ListUsersResponse
	(*StreamedListObjectsRequest)(nil),      // 4: openfga.v1.StreamedListObjectsRequest
	(*StreamedListObjectsResponse)(nil),     // 5: openfga.v1.StreamedListObjectsResponse
	(*ReadRequest)(nil),                     // 6: openfga.v1.ReadRequest
	(*ReadRequestTupleKey)(nil),             // 7: openfga.v1.ReadRequestTupleKey
	(*ReadResponse)(nil),                    // 8: openfga.v1.ReadResponse
	(*WriteRequestWrites)(nil),              // 9: openfga.v1.WriteRequestWrites
	(*WriteRequestDeletes)(nil),             // 10: openfga.v1.WriteRequestDeletes
	(*WriteRequest)(nil),                    // 11: openfga.v1.WriteRequest
	(*WriteResponse)(nil),                   // 12: openfga.v1.WriteResponse
	(*CheckRequest)(nil),                    // 13: openfga.v1.CheckRequest
	(*CheckRequestTupleKey)(nil),            // 14: openfga.v1.CheckRequestTupleKey
	(*CheckResponse)(nil),                   // 15: openfga.v1.CheckResponse
	(*BatchCheckRequest)(nil),               // 16: openfga.v1.BatchCheckRequest
	(*BatchCheckItem)(nil),                  // 17: openfga.v1.BatchCheckItem
	(*BatchCheckResponse)(nil),              // 18: openfga.v1.BatchCheckResponse
	(*BatchCheckSingleResult)(nil),          // 19: openfga.v1.BatchCheckSingleResult
	(*CheckError)(nil),                      // 20: openfga.v1.CheckError
	(*ExpandRequest)(nil),                   // 21: openfga.v1.ExpandRequest
	(*ExpandRequestTupleKey)(nil),           // 22: openfga.v1.ExpandRequestTupleKey
	(*ExpandResponse)(nil),                  // 23: openfga.v1.ExpandResponse
	(*ReadAuthorizationModelRequest)(nil),   // 24: openfga.v1.ReadAuthorizationModelRequest
	(*ReadAuthorizationModelResponse)(nil),  // 25: openfga.v1.ReadAuthorizationModelResponse
	(*WriteAuthorizationModelRequest)(nil),  // 26: openfga.v1.WriteAuthorizationModelRequest
	(*WriteAuthorizationModelResponse)(nil), // 27: openfga.v1.WriteAuthorizationModelResponse
	(*ReadAuthorizationModelsRequest)(nil),  // 28: openfga.v1.ReadAuthorizationModelsRequest
	(*ReadAuthorizationModelsResponse)(nil), // 29: openfga.v1.ReadAuthorizationModelsResponse
	(*WriteAssertionsRequest)(nil),          // 30: openfga.v1.WriteAssertionsRequest
	(*WriteAssertionsResponse)(nil),         // 31: openfga.v1.WriteAssertionsResponse
	(*ReadAssertionsRequest)(nil),           // 32: openfga.v1.ReadAssertionsRequest
	(*ReadAssertionsResponse)(nil),          // 33: openfga.v1.ReadAssertionsResponse
	(*ReadChangesRequest)(nil),              // 34: openfga.v1.ReadChangesRequest
	(*ReadChangesResponse)(nil),             // 35: openfga.v1.ReadChangesResponse
	(*CreateStoreRequest)(nil),              // 36: openfga.v1.CreateStoreRequest
	(*CreateStoreResponse)(nil),             // 37: openfga.v1.CreateStoreResponse
	(*UpdateStoreRequest)(nil),              // 38: openfga.v1.UpdateStoreRequest
	(*UpdateStoreResponse)(nil),             // 39: openfga.v1.UpdateStoreResponse
	(*DeleteStoreRequest)(nil),              // 40: openfga.v1.DeleteStoreRequest
	(*DeleteStoreResponse)(nil),             // 41: openfga.v1.DeleteStoreResponse
	(*GetStoreRequest)(nil),                 // 42: openfga.v1.GetStoreRequest
	(*GetStoreResponse)(nil),                // 43: openfga.v1.GetStoreResponse
	(*ListStoresRequest)(nil),               // 44: openfga.v1.ListStoresRequest
	(*ListStoresResponse)(nil),              // 45: openfga.v1.ListStoresResponse
	(*AssertionTupleKey)(nil),               // 46: openfga.v1.AssertionTupleKey
	(*Assertion)(nil),                       // 47: openfga.v1.Assertion
	(*Assertions)(nil),                      // 48: openfga.v1.Assertions
	nil,                                     // 49: openfga.v1.BatchCheckResponse.ResultEntry
	nil,                                     // 50: openfga.v1.WriteAuthorizationModelRequest.ConditionsEntry
	(*ContextualTupleKeys)(nil),             // 51: openfga.v1.ContextualTupleKeys
	(*structpb.Struct)(nil),                 // 52: google.protobuf.Struct
	(ConsistencyPreference)(0),              // 53: openfga.v1.ConsistencyPreference
	(*Object)(nil),                          // 54: openfga.v1.Object
	(*UserTypeFilter)(nil),                  // 55: openfga.v1.UserTypeFilter
	(*TupleKey)(nil),                        // 56: openfga.v1.TupleKey
	(*User)(nil),                            // 57: openfga.v1.User
	(*wrapperspb.Int32Value)(nil),           // 58: google.protobuf.Int32Value
	(*Tuple)(nil),                           // 59: openfga.v1.Tuple
	(*TupleKeyWithoutCondition)(nil),        // 60: openfga.v1.TupleKeyWithoutCondition
	(ErrorCode)(0),                          // 61: openfga.v1.ErrorCode
	(InternalErrorCode)(0),                  // 62: openfga.v1.InternalErrorCode
	(*UsersetTree)(nil),                     // 63: openfga.v1.UsersetTree
	(*AuthorizationModel)(nil),              // 64: openfga.v1.AuthorizationModel
	(*TypeDefinition)(nil),                  // 65: openfga.v1.TypeDefinition
	(*timestamppb.Timestamp)(nil),           // 66: google.protobuf.Timestamp
	(*TupleChange)(nil),                     // 67: openfga.v1.TupleChange
	(*Store)(nil),                           // 68: openfga.v1.Store
	(*Condition)(nil),                       // 69: openfga.v1.Condition
}
var file_openfga_v1_openfga_service_proto_depIdxs = []int32{
	51, // 0: openfga.v1.ListObjectsRequest.contextual_tuples:type_name -> openfga.v1.ContextualTupleKeys
	52, // 1: openfga.v1.ListObjectsRequest.context:type_name -> google.protobuf.Struct
	53, // 2: openfga.v1.ListObjectsRequest.consistency:type_name -> openfga.v1.ConsistencyPreference
	54, // 3: openfga.v1.ListUsersRequest.object:type_name -> openfga.v1.Object
	55, // 4: openfga.v1.ListUsersRequest.user_filters:type_name -> openfga.v1.UserTypeFilter
	56, // 5: openfga.v1.ListUsersRequest.contextual_tuples:type_name -> openfga.v1.TupleKey
	52, // 6: openfga.v1.ListUsersRequest.context:type_name -> google.protobuf.Struct
	53, // 7: openfga.v1.ListUsersRequest.consistency:type_name -> openfga.v1.ConsistencyPreference
	57, // 8: openfga.v1.ListUsersResponse.users:type_name -> openfga.v1.User
	51, // 9: openfga.v1.StreamedListObjectsRequest.contextual_tuples:type_name -> openfga.v1.ContextualTupleKeys
	52, // 10: openfga.v1.StreamedListObjectsRequest.context:type_name -> google.protobuf.Struct
	53, // 11: openfga.v1.StreamedListObjectsRequest.consistency:type_name -> openfga.v1.ConsistencyPreference
	7,  // 12: openfga.v1.ReadRequest.tuple_key:type_name -> openfga.v1.ReadRequestTupleKey
	58, // 13: openfga.v1.ReadRequest.page_size:type_name -> google.protobuf.Int32Value
	53, // 14: openfga.v1.ReadRequest.consistency:type_name -> openfga.v1.ConsistencyPreference
	59, // 15: openfga.v1.ReadResponse.tuples:type_name -> openfga.v1.Tuple
	56, // 16: openfga.v1.WriteRequestWrites.tuple_keys:type_name -> openfga.v1.TupleKey
	60, // 17: openfga.v1.WriteRequestDeletes.tuple_keys:type_name -> openfga.v1.TupleKeyWithoutCondition
	9,  // 18: openfga.v1.WriteRequest.writes:type_name -> openfga.v1.WriteRequestWrites
	10, // 19: openfga.v1.WriteRequest.deletes:type_name -> openfga.v1.WriteRequestDeletes
	14, // 20: openfga.v1.CheckRequest.tuple_key:type_name -> openfga.v1.CheckRequestTupleKey
	51, // 21: openfga.v1.CheckRequest.contextual_tuples:type_name -> openfga.v1.ContextualTupleKeys
	52, // 22: openfga.v1.CheckRequest.context:type_name -> google.protobuf.Struct
	53, // 23: openfga.v1.CheckRequest.consistency:type_name -> openfga.v1.ConsistencyPreference
	17, // 24: openfga.v1.BatchCheckRequest.checks:type_name -> openfga.v1.BatchCheckItem
	53, // 25: openfga.v1.BatchCheckRequest.consistency:type_name -> openfga.v1.ConsistencyPreference
	14, // 26: openfga.v1.BatchCheckItem.tuple_key:type_name -> openfga.v1.CheckRequestTupleKey
	51, // 27: openfga.v1.BatchCheckItem.contextual_tuples:type_name -> openfga.v1.ContextualTupleKeys
	52, // 28: openfga.v1.BatchCheckItem.context:type_name -> google.protobuf.Struct
	49, // 29: openfga.v1.BatchCheckResponse.result:type_name -> openfga.v1.BatchCheckResponse.ResultEntry
	20, // 30: openfga.v1.BatchCheckSingleResult.error:type_name -> openfga.v1.CheckError
	61, // 31: openfga.v1.CheckError.input_error:type_name -> openfga.v1.ErrorCode
	62, // 32: openfga.v1.CheckError.internal_error:type_name -> openfga.v1.InternalErrorCode
	22, // 33: openfga.v1.ExpandRequest.tuple_key:type_name -> openfga.v1.ExpandRequestTupleKey
	53, // 34: openfga.v1.ExpandRequest.consistency:type_name -> openfga.v1.ConsistencyPreference
	51, // 35: openfga.v1.ExpandRequest.contextual_tuples:type_name -> openfga.v1.ContextualTupleKeys
	63, // 36: openfga.v1.ExpandResponse.tree:type_name -> openfga.v1.UsersetTree
	64, // 37: openfga.v1.ReadAuthorizationModelResponse.authorization_model:type_name -> openfga.v1.AuthorizationModel
	65, // 38: openfga.v1.WriteAuthorizationModelRequest.type_definitions:type_name -> openfga.v1.TypeDefinition
	50, // 39: openfga.v1.WriteAuthorizationModelRequest.conditions:type_name -> openfga.v1.WriteAuthorizationModelRequest.ConditionsEntry
	58, // 40: openfga.v1.ReadAuthorizationModelsRequest.page_size:type_name -> google.protobuf.Int32Value
	64, // 41: openfga.v1.ReadAuthorizationModelsResponse.authorization_models:type_name -> openfga.v1.AuthorizationModel
	47, // 42: openfga.v1.WriteAssertionsRequest.assertions:type_name -> openfga.v1.Assertion
	47, // 43: openfga.v1.ReadAssertionsResponse.assertions:type_name -> openfga.v1.Assertion
	58, // 44: openfga.v1.ReadChangesRequest.page_size:type_name -> google.protobuf.Int32Value
	66, // 45: openfga.v1.ReadChangesRequest.start_time:type_name -> google.protobuf.Timestamp
	67, // 46: openfga.v1.ReadChangesResponse.changes:type_name -> openfga.v1.TupleChange
	66, // 47: openfga.v1.CreateStoreResponse.created_at:type_name -> google.protobuf.Timestamp
	66, // 48: openfga.v1.CreateStoreResponse.updated_at:type_name -> google.protobuf.Timestamp
	66, // 49: openfga.v1.UpdateStoreResponse.created_at:type_name -> google.protobuf.Timestamp
	66, // 50: openfga.v1.UpdateStoreResponse.updated_at:type_name -> google.protobuf.Timestamp
	66, // 51: openfga.v1.GetStoreResponse.created_at:type_name -> google.protobuf.Timestamp
	66, // 52: openfga.v1.GetStoreResponse.updated_at:type_name -> google.protobuf.Timestamp
	66, // 53: openfga.v1.GetStoreResponse.deleted_at:type_name -> google.protobuf.Timestamp
	58, // 54: openfga.v1.ListStoresRequest.page_size:type_name -> google.protobuf.Int32Value
	68, // 55: openfga.v1.ListStoresResponse.stores:type_name -> openfga.v1.Store
	46, // 56: openfga.v1.Assertion.tuple_key:type_name -> openfga.v1.AssertionTupleKey
	56, // 57: openfga.v1.Assertion.contextual_tuples:type_name -> openfga.v1.TupleKey
	52, // 58: openfga.v1.Assertion.context:type_name -> google.protobuf.Struct
	47, // 59: openfga.v1.Assertions.assertions:type_name -> openfga.v1.Assertion
	19, // 60: openfga.v1.BatchCheckResponse.ResultEntry.value:type_name -> openfga.v1.BatchCheckSingleResult
	69, // 61: openfga.v1.WriteAuthorizationModelRequest.ConditionsEntry.value:type_name -> openfga.v1.Condition
	6,  // 62: openfga.v1.OpenFGAService.Read:input_type -> openfga.v1.ReadRequest
	11, // 63: openfga.v1.OpenFGAService.Write:input_type -> openfga.v1.WriteRequest
	13, // 64: openfga.v1.OpenFGAService.Check:input_type -> openfga.v1.CheckRequest
	16, // 65: openfga.v1.OpenFGAService.BatchCheck:input_type -> openfga.v1.BatchCheckRequest
	21, // 66: openfga.v1.OpenFGAService.Expand:input_type -> openfga.v1.ExpandRequest
	28, // 67: openfga.v1.OpenFGAService.ReadAuthorizationModels:input_type -> openfga.v1.ReadAuthorizationModelsRequest
	24, // 68: openfga.v1.OpenFGAService.ReadAuthorizationModel:input_type -> openfga.v1.ReadAuthorizationModelRequest
	26, // 69: openfga.v1.OpenFGAService.WriteAuthorizationModel:input_type -> openfga.v1.WriteAuthorizationModelRequest
	30, // 70: openfga.v1.OpenFGAService.WriteAssertions:input_type -> openfga.v1.WriteAssertionsRequest
	32, // 71: openfga.v1.OpenFGAService.ReadAssertions:input_type -> openfga.v1.ReadAssertionsRequest
	34, // 72: openfga.v1.OpenFGAService.ReadChanges:input_type -> openfga.v1.ReadChangesRequest
	36, // 73: openfga.v1.OpenFGAService.CreateStore:input_type -> openfga.v1.CreateStoreRequest
	38, // 74: openfga.v1.OpenFGAService.UpdateStore:input_type -> openfga.v1.UpdateStoreRequest
	40, // 75: openfga.v1.OpenFGAService.DeleteStore:input_type -> openfga.v1.DeleteStoreRequest
	42, // 76: openfga.v1.OpenFGAService.GetStore:input_type -> openfga.v1.GetStoreRequest
	44, // 77: openfga.v1.OpenFGAService.ListStores:input_type -> openfga.v1.ListStoresRequest
	4,  // 78: openfga.v1.OpenFGAService.StreamedListObjects:input_type -> openfga.v1.StreamedListObjectsRequest
	0,  // 79: openfga.v1.OpenFGAService.ListObjects:input_type -> openfga.v1.ListObjectsRequest
	2,  // 80: openfga.v1.OpenFGAService.ListUsers:input_type -> openfga.v1.ListUsersRequest
	8,  // 81: openfga.v1.OpenFGAService.Read:output_type -> openfga.v1.ReadResponse
	12, // 82: openfga.v1.OpenFGAService.Write:output_type -> openfga.v1.WriteResponse
	15, // 83: openfga.v1.OpenFGAService.Check:output_type -> openfga.v1.CheckResponse
	18, // 84: openfga.v1.OpenFGAService.BatchCheck:output_type -> openfga.v1.BatchCheckResponse
	23, // 85: openfga.v1.OpenFGAService.Expand:output_type -> openfga.v1.ExpandResponse
	29, // 86: openfga.v1.OpenFGAService.ReadAuthorizationModels:output_type -> openfga.v1.ReadAuthorizationModelsResponse
	25, // 87: openfga.v1.OpenFGAService.ReadAuthorizationModel:output_type -> openfga.v1.ReadAuthorizationModelResponse
	27, // 88: openfga.v1.OpenFGAService.WriteAuthorizationModel:output_type -> openfga.v1.WriteAuthorizationModelResponse
	31, // 89: openfga.v1.OpenFGAService.WriteAssertions:output_type -> openfga.v1.WriteAssertionsResponse
	33, // 90: openfga.v1.OpenFGAService.ReadAssertions:output_type -> openfga.v1.ReadAssertionsResponse
	35, // 91: openfga.v1.OpenFGAService.ReadChanges:output_type -> openfga.v1.ReadChangesResponse
	37, // 92: openfga.v1.OpenFGAService.CreateStore:output_type -> openfga.v1.CreateStoreResponse
	39, // 93: openfga.v1.OpenFGAService.UpdateStore:output_type -> openfga.v1.UpdateStoreResponse
	41, // 94: openfga.v1.OpenFGAService.DeleteStore:output_type -> openfga.v1.DeleteStoreResponse
	43, // 95: openfga.v1.OpenFGAService.GetStore:output_type -> openfga.v1.GetStoreResponse
	45, // 96: openfga.v1.OpenFGAService.ListStores:output_type -> openfga.v1.ListStoresResponse
	5,  // 97: openfga.v1.OpenFGAService.StreamedListObjects:output_type -> openfga.v1.StreamedListObjectsResponse
	1,  // 98: openfga.v1.OpenFGAService.ListObjects:output_type -> openfga.v1.ListObjectsResponse
	3,  // 99: openfga.v1.OpenFGAService.ListUsers:output_type -> openfga.v1.ListUsersResponse
	81, // [81:100] is the sub-list for method output_type
	62, // [62:81] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_openfga_v1_openfga_service_proto_init() }
func file_openfga_v1_openfga_service_proto_init() {
	if File_openfga_v1_openfga_service_proto != nil {
		return
	}
	file_openfga_v1_authzmodel_proto_init()
	file_openfga_v1_errors_ignore_proto_init()
	file_openfga_v1_openfga_proto_init()
	file_openfga_v1_openfga_service_consistency_proto_init()
	file_openfga_v1_openfga_service_proto_msgTypes[19].OneofWrappers = []any{
		(*BatchCheckSingleResult_Allowed)(nil),
		(*BatchCheckSingleResult_Error)(nil),
	}
	file_openfga_v1_openfga_service_proto_msgTypes[20].OneofWrappers = []any{
		(*CheckError_InputError)(nil),
		(*CheckError_InternalError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_openfga_v1_openfga_service_proto_rawDesc), len(file_openfga_v1_openfga_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_openfga_v1_openfga_service_proto_goTypes,
		DependencyIndexes: file_openfga_v1_openfga_service_proto_depIdxs,
		MessageInfos:      file_openfga_v1_openfga_service_proto_msgTypes,
	}.Build()
	File_openfga_v1_openfga_service_proto = out.File
	file_openfga_v1_openfga_service_proto_goTypes = nil
	file_openfga_v1_openfga_service_proto_depIdxs = nil
}
